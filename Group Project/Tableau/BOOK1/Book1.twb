<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-duration' value='1' />
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Sheet1 (trail_of_tears)' inline='true' name='federated.1undkly1k7e1a615jo9o90snrsqb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='trail_of_tears' name='excel-direct.1jwlwy3183o67i102nd6h0vjyaco'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/smast/Downloads/trail_of_tears.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jwlwy3183o67i102nd6h0vjyaco' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Main ID' ordinal='0' />
            <column datatype='string' name='Incident ID' ordinal='1' />
            <column datatype='string' name='Incident Type' ordinal='2' />
            <column datatype='string' name='Region of Incident' ordinal='3' />
            <column datatype='string' name='Website Date' ordinal='4' />
            <column datatype='date' date-parse-format='yyyy' name='Incident year' ordinal='5' />
            <column datatype='string' name='Reported Month' ordinal='6' />
            <column datatype='string' name='Month/Year' ordinal='7' />
            <column datatype='integer' name='Number of Dead' ordinal='8' />
            <column datatype='integer' name='Minimum Estimated Number of Missing' ordinal='9' />
            <column datatype='integer' name='Total Number of Dead and Missing' ordinal='10' />
            <column datatype='integer' name='Number of Survivors' ordinal='11' />
            <column datatype='integer' name='Number of Females' ordinal='12' />
            <column datatype='integer' name='Number of Males' ordinal='13' />
            <column datatype='integer' name='Number of Children' ordinal='14' />
            <column datatype='string' name='Region of Origin' ordinal='15' />
            <column datatype='integer' name='P dummy' ordinal='16' />
            <column datatype='string' name='Processed Cause of Death' ordinal='17' />
            <column datatype='string' name='Processed Country of Origin' ordinal='18' />
            <column datatype='string' name='Location of death' ordinal='19' />
            <column datatype='string' name='Information Source' ordinal='20' />
            <column datatype='string' name='Processed Migration route' ordinal='21' />
            <column datatype='string' name='Coordinates' ordinal='22' />
            <column datatype='string' name='Processed UNSD Geographical Grouping' ordinal='23' />
            <column datatype='string' name='Article title' ordinal='24' />
            <column datatype='integer' name='Source Quality' ordinal='25' />
            <column datatype='string' name='URL' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1jwlwy3183o67i102nd6h0vjyaco' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Main ID' ordinal='0' />
            <column datatype='string' name='Incident ID' ordinal='1' />
            <column datatype='string' name='Incident Type' ordinal='2' />
            <column datatype='string' name='Region of Incident' ordinal='3' />
            <column datatype='string' name='Website Date' ordinal='4' />
            <column datatype='date' date-parse-format='yyyy' name='Incident year' ordinal='5' />
            <column datatype='string' name='Reported Month' ordinal='6' />
            <column datatype='string' name='Month/Year' ordinal='7' />
            <column datatype='integer' name='Number of Dead' ordinal='8' />
            <column datatype='integer' name='Minimum Estimated Number of Missing' ordinal='9' />
            <column datatype='integer' name='Total Number of Dead and Missing' ordinal='10' />
            <column datatype='integer' name='Number of Survivors' ordinal='11' />
            <column datatype='integer' name='Number of Females' ordinal='12' />
            <column datatype='integer' name='Number of Males' ordinal='13' />
            <column datatype='integer' name='Number of Children' ordinal='14' />
            <column datatype='string' name='Region of Origin' ordinal='15' />
            <column datatype='integer' name='P dummy' ordinal='16' />
            <column datatype='string' name='Processed Cause of Death' ordinal='17' />
            <column datatype='string' name='Processed Country of Origin' ordinal='18' />
            <column datatype='string' name='Location of death' ordinal='19' />
            <column datatype='string' name='Information Source' ordinal='20' />
            <column datatype='string' name='Processed Migration route' ordinal='21' />
            <column datatype='string' name='Coordinates' ordinal='22' />
            <column datatype='string' name='Processed UNSD Geographical Grouping' ordinal='23' />
            <column datatype='string' name='Article title' ordinal='24' />
            <column datatype='integer' name='Source Quality' ordinal='25' />
            <column datatype='string' name='URL' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AA10001:no:A1:AA2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Main ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Main ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Main ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Incident ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Incident ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Incident Type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Incident Type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region of Incident</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region of Incident]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region of Incident</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Website Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Website Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Website Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Incident year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reported Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Reported Month]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Reported Month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month/Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Month/Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Month/Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Dead</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Dead]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of Dead</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Minimum Estimated Number of Missing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Minimum Estimated Number of Missing]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Minimum Estimated Number of Missing</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Number of Dead and Missing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Number of Dead and Missing]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total Number of Dead and Missing</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Survivors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Survivors]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of Survivors</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Females</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Females]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of Females</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Males</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Males]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of Males</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Children</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Children]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number of Children</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region of Origin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region of Origin]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region of Origin</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>P dummy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[P dummy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>P dummy</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processed Cause of Death</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Processed Cause of Death]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Processed Cause of Death</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processed Country of Origin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Processed Country of Origin]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Processed Country of Origin</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location of death</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location of death]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location of death</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Information Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Information Source]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Information Source</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processed Migration route</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Processed Migration route]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Processed Migration route</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coordinates</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Coordinates]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Coordinates</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Processed UNSD Geographical Grouping</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Processed UNSD Geographical Grouping]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Processed UNSD Geographical Grouping</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Article title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Article title]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Article title</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source Quality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Source Quality]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Source Quality</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[URL]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>URL</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_110B257214CE4587B63886037DB0CAD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762314871419457536:qk]&quot;' value='Number of Males' />
        </aliases>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1762877815702470656]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Total Number of Dead and Missing]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Women &amp; Children' datatype='integer' name='[Calculation_1762877815703912449]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Children]+[Number of Females])' />
      </column>
      <column aggregation='Avg' caption='Coordinates - Split 1' datatype='real' name='[Coordinates - Split 1]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1undkly1k7e1a615jo9o90snrsqb].[Coordinates]'>
        <calculation class='tableau' formula='FLOAT( SPLIT( [Coordinates], &quot; &quot;, 1 ) )' />
      </column>
      <column aggregation='Avg' caption='Coordinates - Split 2' datatype='real' name='[Coordinates - Split 2]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1undkly1k7e1a615jo9o90snrsqb].[Coordinates]'>
        <calculation class='tableau' formula='FLOAT( SPLIT( [Coordinates], &quot; &quot;, 2 ) )' />
      </column>
      <column datatype='date' name='[Incident year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Number of Children]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Dead]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Females]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Males]' role='measure' type='quantitative' />
      <column datatype='string' name='[Processed Country of Origin]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Processed Migration route]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region of Incident]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region of Origin]' role='dimension' type='nominal' />
      <column datatype='string' name='[Reported Month]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Total Number of Dead and Missing]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_110B257214CE4587B63886037DB0CAD7]' role='measure' type='quantitative' />
      <column-instance column='[Processed Country of Origin]' derivation='None' name='[none:Processed Country of Origin:nk]' pivot='key' type='nominal' />
      <column-instance column='[Processed Migration route]' derivation='None' name='[none:Processed Migration route:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region of Incident]' derivation='None' name='[none:Region of Incident:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region of Origin]' derivation='None' name='[none:Region of Origin:nk]' pivot='key' type='nominal' />
      <column-instance column='[Reported Month]' derivation='None' name='[none:Reported Month:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Children]' derivation='Sum' name='[sum:Number of Children:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Dead]' derivation='Sum' name='[sum:Number of Dead:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Females]' derivation='Sum' name='[sum:Number of Females:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Males]' derivation='Sum' name='[sum:Number of Males:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Number of Dead and Missing]' derivation='Sum' name='[sum:Total Number of Dead and Missing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Incident year]' derivation='Year-Trunc' name='[tyr:Incident year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1762877815703912449]' derivation='User' name='[usr:Calculation_1762877815703912449:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Processed Country of Origin,Processed Migration route,YEAR(Incident year))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Processed Country of Origin:nk]' />
          <groupfilter function='level-members' level='[none:Processed Migration route:nk]' />
          <groupfilter function='level-members' level='[tyr:Incident year:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Processed Country of Origin,Region of Incident)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Processed Country of Origin:nk]' />
          <groupfilter function='level-members' level='[none:Region of Incident:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Processed Country of Origin,Region of Incident,Reported Month)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Processed Country of Origin:nk]' />
          <groupfilter function='level-members' level='[none:Region of Incident:nk]' />
          <groupfilter function='level-members' level='[none:Reported Month:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region of Incident:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Middle Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South-eastern Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mediterranean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region of Origin:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Mixed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western / Southern Asia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latin America / Caribbean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South-eastern Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Middle Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastern Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='red_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Dead:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762314871419457536:qk]&quot;</bucket>
            </map>
            <map to='#aa0000'>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Males:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]&quot;</bucket>
            </map>
            <map to='#f26466'>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]&quot;</bucket>
            </map>
            <map to='#fc7345'>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Children:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Greece&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_110B257214CE4587B63886037DB0CAD7'>
            <properties context=''>
              <relation connection='excel-direct.1jwlwy3183o67i102nd6h0vjyaco' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:AA10001:no:A1:AA2147483647:0' header='yes' outcome='2'>
                  <column datatype='string' name='Main ID' ordinal='0' />
                  <column datatype='string' name='Incident ID' ordinal='1' />
                  <column datatype='string' name='Incident Type' ordinal='2' />
                  <column datatype='string' name='Region of Incident' ordinal='3' />
                  <column datatype='string' name='Website Date' ordinal='4' />
                  <column datatype='date' date-parse-format='yyyy' name='Incident year' ordinal='5' />
                  <column datatype='string' name='Reported Month' ordinal='6' />
                  <column datatype='string' name='Month/Year' ordinal='7' />
                  <column datatype='integer' name='Number of Dead' ordinal='8' />
                  <column datatype='integer' name='Minimum Estimated Number of Missing' ordinal='9' />
                  <column datatype='integer' name='Total Number of Dead and Missing' ordinal='10' />
                  <column datatype='integer' name='Number of Survivors' ordinal='11' />
                  <column datatype='integer' name='Number of Females' ordinal='12' />
                  <column datatype='integer' name='Number of Males' ordinal='13' />
                  <column datatype='integer' name='Number of Children' ordinal='14' />
                  <column datatype='string' name='Region of Origin' ordinal='15' />
                  <column datatype='integer' name='P dummy' ordinal='16' />
                  <column datatype='string' name='Processed Cause of Death' ordinal='17' />
                  <column datatype='string' name='Processed Country of Origin' ordinal='18' />
                  <column datatype='string' name='Location of death' ordinal='19' />
                  <column datatype='string' name='Information Source' ordinal='20' />
                  <column datatype='string' name='Processed Migration route' ordinal='21' />
                  <column datatype='string' name='Coordinates' ordinal='22' />
                  <column datatype='string' name='Processed UNSD Geographical Grouping' ordinal='23' />
                  <column datatype='string' name='Article title' ordinal='24' />
                  <column datatype='integer' name='Source Quality' ordinal='25' />
                  <column datatype='string' name='URL' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_5379CD7F1EC44AC7B608959C5382DFC7]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Dead or Missing Men Women and Children per Migration Route' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dead or Missing Men Women and Children per Migration Route' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Countries of Origin'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='14'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (trail_of_tears)' name='federated.1undkly1k7e1a615jo9o90snrsqb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1undkly1k7e1a615jo9o90snrsqb'>
            <column datatype='date' name='[Incident year]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Children]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Females]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processed Country of Origin]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total Number of Dead and Missing]' role='measure' type='quantitative' />
            <column-instance column='[Processed Country of Origin]' derivation='None' name='[none:Processed Country of Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Children]' derivation='Sum' name='[sum:Number of Children:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Females]' derivation='Sum' name='[sum:Number of Females:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Number of Dead and Missing]' derivation='Sum' name='[sum:Total Number of Dead and Missing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident year]' derivation='Year-Trunc' name='[tyr:Incident year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[Latitude (generated)]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[Longitude (generated)]' field-type='quantitative' max='20993480.521472242' min='-18709697.681485076' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[Latitude (generated)]' field-type='quantitative' max='13928683.943415439' min='-10020865.50284002' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' max='700' num-steps='7' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]' value='false' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' />
              <tooltip column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]' />
              <tooltip column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Children:qk]' />
              <text column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]' />
              <geometry column='[federated.1undkly1k7e1a615jo9o90snrsqb].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1undkly1k7e1a615jo9o90snrsqb].[Latitude (generated)]</rows>
        <cols>[federated.1undkly1k7e1a615jo9o90snrsqb].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{B7F398AC-6B7E-469B-975A-F7DECBB2E0A4}' />
    </worksheet>
    <worksheet name='Dead or Missing Men Women and Children per Migration Route'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (trail_of_tears)' name='federated.1undkly1k7e1a615jo9o90snrsqb' />
          </datasources>
          <datasource-dependencies datasource='federated.1undkly1k7e1a615jo9o90snrsqb'>
            <column datatype='integer' name='[Number of Children]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Females]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Males]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processed Migration route]' role='dimension' type='nominal' />
            <column-instance column='[Processed Migration route]' derivation='None' name='[none:Processed Migration route:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Children]' derivation='Sum' name='[sum:Number of Children:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Females]' derivation='Sum' name='[sum:Number of Females:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Males]' derivation='Sum' name='[sum:Number of Males:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Males:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Children:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1undkly1k7e1a615jo9o90snrsqb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Males:qk]&quot;</bucket>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]&quot;</bucket>
              <bucket>&quot;[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Children:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Migration route:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Afghanistan to Iran&quot;' />
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Horn of Africa to Yemen crossing&quot;' />
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Iran to Türkiye&quot;' />
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Syria to Türkiye&quot;' />
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Türkiye-Europe land route&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Children:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Males:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Migration route:nk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[:Measure Names]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Children:qk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Males:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[:Measure Names]' value='85' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[:Measure Names]' value='73' />
            <format attr='text-format' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Males:qk]' value='N' />
            <format attr='text-format' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]' value='N' />
            <format attr='text-format' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Children:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[:Measure Names]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1undkly1k7e1a615jo9o90snrsqb].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='536' />
                <format attr='maxheight' value='536' />
                <format attr='minwidth' value='219' />
                <format attr='maxwidth' value='219' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1undkly1k7e1a615jo9o90snrsqb].[Multiple Values]</rows>
        <cols>([federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Migration route:nk] / [federated.1undkly1k7e1a615jo9o90snrsqb].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{D436CF2A-E8F1-4403-A757-ADE373D499DD}' />
    </worksheet>
    <worksheet name='Incident Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='20'>&lt;Sheet Name&gt; of Asia</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (trail_of_tears)' name='federated.1undkly1k7e1a615jo9o90snrsqb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1undkly1k7e1a615jo9o90snrsqb'>
            <column datatype='string' name='[Article title]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Coordinates - Split 1' datatype='real' name='[Coordinates - Split 1]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1undkly1k7e1a615jo9o90snrsqb].[Coordinates]'>
              <calculation class='tableau' formula='FLOAT( SPLIT( [Coordinates], &quot; &quot;, 1 ) )' />
            </column>
            <column aggregation='Avg' caption='Coordinates - Split 2' datatype='real' name='[Coordinates - Split 2]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.1undkly1k7e1a615jo9o90snrsqb].[Coordinates]'>
              <calculation class='tableau' formula='FLOAT( SPLIT( [Coordinates], &quot; &quot;, 2 ) )' />
            </column>
            <column datatype='string' name='[Coordinates]' role='dimension' type='nominal' />
            <column datatype='date' name='[Incident year]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Children]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Females]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Males]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processed Cause of Death]' role='dimension' type='nominal' />
            <column datatype='string' name='[Processed Country of Origin]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Reported Month]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Number of Dead and Missing]' role='measure' type='quantitative' />
            <column-instance column='[Article title]' derivation='Attribute' name='[attr:Article title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processed Cause of Death]' derivation='Attribute' name='[attr:Processed Cause of Death:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processed Country of Origin]' derivation='Attribute' name='[attr:Processed Country of Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Coordinates - Split 1]' derivation='None' name='[none:Coordinates - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coordinates - Split 2]' derivation='None' name='[none:Coordinates - Split 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Processed Cause of Death]' derivation='None' name='[none:Processed Cause of Death:nk]' pivot='key' type='nominal' />
            <column-instance column='[Reported Month]' derivation='None' name='[none:Reported Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Children]' derivation='Sum' name='[sum:Number of Children:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Females]' derivation='Sum' name='[sum:Number of Females:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Males]' derivation='Sum' name='[sum:Number of Males:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Number of Dead and Missing]' derivation='Sum' name='[sum:Total Number of Dead and Missing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident year]' derivation='Year-Trunc' name='[tyr:Incident year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Cause of Death:nk]'>
            <groupfilter function='member' level='[none:Processed Cause of Death:nk]' member='&quot;Violence&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Reported Month:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Reported Month:nk]' />
              <groupfilter function='member' level='[none:Reported Month:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Reported Month:nk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Cause of Death:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 1:qk]' field-type='quantitative' max='21465341.702404331' min='-13552374.69943467' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 2:qk]' field-type='quantitative' max='13313784.243313035' min='-7164411.5918737818' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' field-type='quantitative' max-size='1' min-size='0.0556456' type='rangesize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 2:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 2:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 2:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 1:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 1:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 1:qk]' value='false' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' />
              <tooltip column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' />
              <tooltip column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]' />
              <tooltip column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Males:qk]' />
              <tooltip column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Children:qk]' />
              <tooltip column='[federated.1undkly1k7e1a615jo9o90snrsqb].[attr:Article title:nk]' />
              <tooltip column='[federated.1undkly1k7e1a615jo9o90snrsqb].[attr:Processed Country of Origin:nk]' />
              <tooltip column='[federated.1undkly1k7e1a615jo9o90snrsqb].[attr:Processed Cause of Death:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Article title:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1undkly1k7e1a615jo9o90snrsqb].[attr:Article title:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Processed Cause of Death:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1undkly1k7e1a615jo9o90snrsqb].[attr:Processed Cause of Death:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Processed Country of Origin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1undkly1k7e1a615jo9o90snrsqb].[attr:Processed Country of Origin:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Children:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Children:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Females:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Males:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Males:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Number of Dead and Missing:	</run>
                <run bold='true'><![CDATA[<[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.1270718574523926' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#b4152a' />
                <format attr='mark-transparency' value='206' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#a7acad' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 2:qk]</rows>
        <cols>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 1:qk]</cols>
        <pages>
          <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{5C3C6954-A63B-46A8-9E54-1873B5CA1EE6}' />
    </worksheet>
    <worksheet name='Incident Regions and Number of Dead, Missing and Vunerable Persons'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='14'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (trail_of_tears)' name='federated.1undkly1k7e1a615jo9o90snrsqb' />
          </datasources>
          <datasource-dependencies datasource='federated.1undkly1k7e1a615jo9o90snrsqb'>
            <column caption='Women &amp; Children' datatype='integer' name='[Calculation_1762877815703912449]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Children]+[Number of Females])' />
            </column>
            <column datatype='date' name='[Incident year]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Children]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Dead]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Females]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processed Cause of Death]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region of Incident]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region of Origin]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Number of Dead and Missing]' role='measure' type='quantitative' />
            <column-instance column='[Processed Cause of Death]' derivation='None' name='[none:Processed Cause of Death:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region of Incident]' derivation='None' name='[none:Region of Incident:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region of Origin]' derivation='None' name='[none:Region of Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Dead]' derivation='Sum' name='[sum:Number of Dead:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Number of Dead and Missing]' derivation='Sum' name='[sum:Total Number of Dead and Missing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident year]' derivation='Year-Trunc' name='[tyr:Incident year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1762877815703912449]' derivation='User' name='[usr:Calculation_1762877815703912449:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Cause of Death:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Processed Cause of Death:nk]' />
              <groupfilter function='member' level='[none:Processed Cause of Death:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region of Incident:nk]' />
              <groupfilter function='member' level='[none:Region of Incident:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]'>
            <groupfilter function='level-members' level='[none:Region of Origin:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Cause of Death:nk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]' value='64' />
            <encoding attr='space' class='0' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' field-type='quantitative' max='4000' min='0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]' field-type='quantitative' max='353' min='-10' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]' value='#ffffff' />
            <format attr='tick-color' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='56' />
            <format attr='background-color' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]' value='*' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Dead:qk]' field-type='quantitative' max-size='1' min-size='0.00165334' type='quantsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#333333' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]' value='false' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Dead:qk]' value='Number of Dead' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' value='#ffffff' />
            <format attr='color' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Dead:qk]' />
              <text column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
                <format attr='mark-transparency' value='180' />
                <format attr='mark-color' value='#b4152a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1undkly1k7e1a615jo9o90snrsqb].[usr:Calculation_1762877815703912449:qk]</rows>
        <cols>[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]</cols>
        <pages>
          <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{73D1E895-1B26-4768-9261-0F9931BAE973}' />
    </worksheet>
    <worksheet name='Number of Survivors per Country of Incident'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Number of Survivors per Country of Incident</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (trail_of_tears)' name='federated.1undkly1k7e1a615jo9o90snrsqb' />
          </datasources>
          <datasource-dependencies datasource='federated.1undkly1k7e1a615jo9o90snrsqb'>
            <column datatype='integer' name='[Number of Survivors]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processed Country of Origin]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region of Incident]' role='dimension' type='nominal' />
            <column datatype='string' name='[Reported Month]' role='dimension' type='nominal' />
            <column-instance column='[Processed Country of Origin]' derivation='None' name='[none:Processed Country of Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region of Incident]' derivation='None' name='[none:Region of Incident:nk]' pivot='key' type='nominal' />
            <column-instance column='[Reported Month]' derivation='None' name='[none:Reported Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Survivors]' derivation='Sum' name='[sum:Number of Survivors:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Region of Incident)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Processed Country of Origin:nk]' />
                <groupfilter function='level-members' level='[none:Region of Incident:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;South-eastern Asia&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Southern Asia&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;South-eastern Asia&quot;' />
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Western Asia&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Region of Incident,Reported Month)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Processed Country of Origin:nk]' />
                <groupfilter function='level-members' level='[none:Region of Incident:nk]' />
                <groupfilter function='level-members' level='[none:Reported Month:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;South-eastern Asia&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;China&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;April&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Indonesia&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Mixed/Unknown&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;December&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;July&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;June&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;November&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;October&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Southern Asia&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;February&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;July&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;October&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Mixed/Unknown&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;April&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;December&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;February&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;July&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;June&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;November&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;October&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Myanmar&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;June&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Western Asia&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;February&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;January&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;June&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Bangladesh&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Ethiopia&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;December&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Iraq&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Pakistan&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;April&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;January&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;November&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Somalia&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;October&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Syrian Arab Republic&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;November&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Türkiye&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Processed Country of Origin:nk]' />
                  <hierarchy name='[none:Region of Incident:nk]' />
                  <hierarchy name='[none:Reported Month:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Processed Country of Origin:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Congo&quot;' />
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Democratic People&apos;s Republic of Korea&quot;' />
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Egypt&quot;' />
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Lao People&apos;s Democratic Republic&quot;' />
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Morocco&quot;' />
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Oman&quot;' />
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Republic of Korea&quot;' />
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;State of Palestine&quot;' />
                <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Sudan&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Türkiye&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Mixed/Unknown&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;State of Palestine&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Central Asia&quot;' />
              <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Eastern Asia&quot;' />
              <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;South-eastern Asia&quot;' />
              <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Southern Asia&quot;' />
              <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Western Asia&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Reported Month:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Reported Month:nk]' />
              <groupfilter function='member' level='[none:Reported Month:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Region of Incident)]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Region of Incident,Reported Month)]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Reported Month:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]' value='176' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]' value='168' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Survivors:qk]' max='2500' min='1' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Survivors:qk]' />
              <text column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Survivors:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]</rows>
        <cols>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]</cols>
      </table>
      <simple-id uuid='{C3D3055C-EE59-4983-8E55-385E8DD45BBC}' />
    </worksheet>
    <worksheet name='Number of Survivors per Route'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Number of Survivors per Route</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (trail_of_tears)' name='federated.1undkly1k7e1a615jo9o90snrsqb' />
          </datasources>
          <datasource-dependencies datasource='federated.1undkly1k7e1a615jo9o90snrsqb'>
            <column datatype='date' name='[Incident year]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Number of Survivors]' role='measure' type='quantitative' />
            <column datatype='string' name='[Processed Country of Origin]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Processed Migration route]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region of Incident]' role='dimension' type='nominal' />
            <column datatype='string' name='[Reported Month]' role='dimension' type='nominal' />
            <column-instance column='[Processed Country of Origin]' derivation='None' name='[none:Processed Country of Origin:nk]' pivot='key' type='nominal' />
            <column-instance column='[Processed Migration route]' derivation='None' name='[none:Processed Migration route:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region of Incident]' derivation='None' name='[none:Region of Incident:nk]' pivot='key' type='nominal' />
            <column-instance column='[Reported Month]' derivation='None' name='[none:Reported Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Survivors]' derivation='Sum' name='[sum:Number of Survivors:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident year]' derivation='Year-Trunc' name='[tyr:Incident year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Processed Migration route,YEAR(Incident year))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Processed Country of Origin:nk]' />
                <groupfilter function='level-members' level='[none:Processed Migration route:nk]' />
                <groupfilter function='level-members' level='[tyr:Incident year:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Afghanistan to Iran&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2020-01-01 00:00:00#' />
                      <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Horn of Africa to Yemen crossing&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2014-01-01 00:00:00#' />
                          <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2015-01-01 00:00:00#' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Ethiopia&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2017-01-01 00:00:00#' />
                          <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2019-01-01 00:00:00#' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Mixed/Unknown&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Iran to Türkiye&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2017-01-01 00:00:00#' />
                          <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2018-01-01 00:00:00#' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Mixed/Unknown&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2019-01-01 00:00:00#' />
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Syria to Türkiye&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2014-01-01 00:00:00#' />
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2015-01-01 00:00:00#' />
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2018-01-01 00:00:00#' />
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2021-01-01 00:00:00#' />
                      </groupfilter>
                      <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Syrian Arab Republic&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Türkiye-Europe land route&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2019-01-01 00:00:00#' />
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2020-01-01 00:00:00#' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Mixed/Unknown&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2021-01-01 00:00:00#' />
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Mixed/Unknown&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Unknown&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2014-01-01 00:00:00#' />
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Bangladesh&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2015-01-01 00:00:00#' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Somalia&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2016-01-01 00:00:00#' />
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Nepal&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2017-01-01 00:00:00#' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Ethiopia&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Iraq&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Tunisia&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2018-01-01 00:00:00#' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Pakistan&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2019-01-01 00:00:00#' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Democratic People&apos;s Republic of Korea&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Pakistan&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Türkiye&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2020-01-01 00:00:00#' />
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Iraq&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2021-01-01 00:00:00#' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Ethiopia&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Tunisia&quot;' />
                          <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Uzbekistan&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[tyr:Incident year:ok]' member='#2022-01-01 00:00:00#' />
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Processed Country of Origin:nk]' />
                  <hierarchy name='[none:Processed Migration route:nk]' />
                  <hierarchy name='[tyr:Incident year:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Region of Incident)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Processed Country of Origin:nk]' />
                <groupfilter function='level-members' level='[none:Region of Incident:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;South-eastern Asia&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Southern Asia&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;South-eastern Asia&quot;' />
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Western Asia&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Region of Incident,Reported Month)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Processed Country of Origin:nk]' />
                <groupfilter function='level-members' level='[none:Region of Incident:nk]' />
                <groupfilter function='level-members' level='[none:Reported Month:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;South-eastern Asia&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;China&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;April&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Indonesia&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Mixed/Unknown&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;December&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;July&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;June&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;November&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;October&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Southern Asia&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;February&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;July&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;October&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Mixed/Unknown&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;April&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;December&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;February&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;July&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;June&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;November&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;October&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Myanmar&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;June&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Region of Incident:nk]' member='&quot;Western Asia&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;February&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;January&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;June&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Bangladesh&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Ethiopia&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;December&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Iraq&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;August&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Pakistan&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;April&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;January&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;March&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;November&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Somalia&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;October&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Syrian Arab Republic&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;May&quot;' />
                          <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;November&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Türkiye&quot;' />
                        <groupfilter function='member' level='[none:Reported Month:nk]' member='&quot;September&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Processed Country of Origin:nk]' />
                  <hierarchy name='[none:Region of Incident:nk]' />
                  <hierarchy name='[none:Reported Month:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Mixed/Unknown&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Syrian Arab Republic&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Türkiye&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Processed Country of Origin:nk]' member='&quot;Viet Nam&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Türkiye&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Mixed/Unknown&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;State of Palestine&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Migration route:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Afghanistan to Iran&quot;' />
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Horn of Africa to Yemen crossing&quot;' />
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Iran to Türkiye&quot;' />
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Syria to Türkiye&quot;' />
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Türkiye-Europe land route&quot;' />
              <groupfilter function='member' level='[none:Processed Migration route:nk]' member='&quot;Unknown&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Migration route:nk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Region of Incident)]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Region of Incident,Reported Month)]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]</column>
            <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[Exclusions (Processed Country of Origin,Processed Migration route,YEAR(Incident year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]' value='176' />
            <format attr='width' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Migration route:nk]' value='172' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]' value='168' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Survivors:qk]' max='2500' min='1' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Survivors:qk]' />
              <text column='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Survivors:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]</rows>
        <cols>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Migration route:nk]</cols>
        <pages>
          <column>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{B8674382-6606-47D8-B3F7-3887A77FBFAE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='86600' x='800' y='1000'>
              <zone h='54874' id='3' name='Countries of Origin' w='86600' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43126' id='10' name='Incident Regions and Number of Dead, Missing and Vunerable Persons' w='86600' x='800' y='55874'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='118' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11800' x='87400' y='1000'>
              <zone h='9125' id='8' name='Countries of Origin' pane-specification-id='0' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' type-v2='color' w='11800' x='87400' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone count='1' h='14875' id='9' name='Countries of Origin' name1='Incident Regions and Number of Dead, Missing and Vunerable Persons' synchronized='1' type-v2='currpage' w='11800' x='87400' y='10125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14250' id='12' name='Incident Regions and Number of Dead, Missing and Vunerable Persons' pane-specification-id='4' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Dead:qk]' type-v2='size' w='11800' x='87400' y='25000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3000' id='11' name='Incident Regions and Number of Dead, Missing and Vunerable Persons' pane-specification-id='4' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]' type-v2='color' w='11800' x='87400' y='39250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='38' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='37' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='54874' id='3' is-fixed='true' name='Countries of Origin' w='86600' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='8' name='Countries of Origin' pane-specification-id='0' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' type-v2='color' w='11800' x='87400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43126' id='10' is-fixed='true' name='Incident Regions and Number of Dead, Missing and Vunerable Persons' w='86600' x='800' y='55874'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14250' id='12' name='Incident Regions and Number of Dead, Missing and Vunerable Persons' pane-specification-id='4' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Dead:qk]' type-v2='size' w='11800' x='87400' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='11' name='Incident Regions and Number of Dead, Missing and Vunerable Persons' pane-specification-id='4' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]' type-v2='color' w='11800' x='87400' y='39250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='14875' id='9' name='Countries of Origin' name1='Incident Regions and Number of Dead, Missing and Vunerable Persons' synchronized='1' type-v2='currpage' w='11800' x='87400' y='10125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#000000' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{387847A9-3171-4F1F-B0A9-3AE3FE3159F7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Incident Map' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' type='size' />
            <card param='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Cause of Death:nk]' type='filter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2019-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Article title:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 1:ok]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 1:qk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 2:ok]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Coordinates - Split 2:qk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Cause of Death:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Reported Month:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Females:qk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:qk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[yr:Incident year:ok]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{3730713F-2032-4633-A1FC-DF69FBFF84D2}' />
    </window>
    <window class='dashboard' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Countries of Origin'>
          <current-page>
            <multibucket>
              <bucket>#2019-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='Incident Regions and Number of Dead, Missing and Vunerable Persons'>
          <current-page>
            <multibucket>
              <bucket>#2019-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{94140152-2DB5-4089-B3A4-4620DDC151C1}' />
    </window>
    <window class='worksheet' name='Countries of Origin' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='199'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2015-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Total Number of Dead and Missing:qk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{2FB09B82-7F25-4242-97AC-6E09F59F2727}' />
    </window>
    <window class='worksheet' name='Incident Regions and Number of Dead, Missing and Vunerable Persons' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='180'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='144'>
            <card param='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='4' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Dead:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Cause of Death:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8BB8AF5F-E3A6-4D90-B7B6-D33448CEFE2B}' />
    </window>
    <window class='worksheet' maximized='true' name='Dead or Missing Men Women and Children per Migration Route' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Migration route:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Reported Month:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF9BE0FD-EC1E-423D-B04E-A73639F3CDDA}' />
    </window>
    <window class='worksheet' name='Number of Survivors per Country of Incident' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Survivors:qk]' type='color' />
            <card param='[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Reported Month:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Reported Month:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81E01535-A771-4B44-8F26-E5EAFBDCD5CC}' />
    </window>
    <window class='worksheet' name='Number of Survivors per Route' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1undkly1k7e1a615jo9o90snrsqb].[sum:Number of Survivors:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2014-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Country of Origin:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Processed Migration route:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Incident:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Region of Origin:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[none:Reported Month:nk]</field>
            <field>[federated.1undkly1k7e1a615jo9o90snrsqb].[tyr:Incident year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0D1199E-30A3-45DE-9968-432EF8024A62}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countries of Origin' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eYxl+XXf97nb2/f3qurV2tXrdA9n4SycIYf7IsqUKTFaEsFxlNhxAjtA
      HMAJggSBAxhO/goUOEZkOIERO5ItRYgUS5aphRZJUeRQQw5nhsPZep3eaq+37+u9N3+8Ob/6
      vVeveu+e6hkdYDBV9W7fd5ff+Z1zvud7zjH+4T/8h/7Fixc57OJ5Huvr6/i+j+/7LCwsEAgE
      7uqcvV6PZrNJJBIhFAphGIb6rNFoUKvV8H0f13UBMAwD27YZDof4vs/8/DyWZWHb9r5zNxoN
      SqXSXV3fg5ZQKITnecTjceLx+AP//sFgQLPZJJ1OP7DvtC9evMhrr732wL7wTsT3fba2tqjX
      68TjcarVKkeOHMG2bTzPIxKJqGNrtRqJREItZt/31c/9fh/HcdSxnU6Hq1ev4vs+6XSafD6P
      53m0Wi2KxSLdbnfsOizLAlAKEQwGSafTZLPZqddcr9cpl8sMh0P6/f69fSj3UAKBAPF4XN2H
      67qEQqEHfh2DwYBqtcrMzMwD+879W9chE9/3aTQaVKtVTNMknU5jWRaRSIR2u000GlXHDgYD
      yuUyiURC/a3X69Fut9Wusra2RiAQwHEcstks2WyWYrFIo9Gg0WhgGAbLy8vEYjEMw8CyLNrt
      NplMhn6/j2VZWJZFsVgkFosduFsZhkEikaDX61Eul8c+syxLKdFhkOFwSDAYfN+vy3EcMpnM
      A/3OQ68AxWKRYrGIYRhkMhkCgQDZbJZms0mxWCSbzRIMBgmFQriui2EYY4ohVqLf71OpVMhk
      MmxtbREOhwGYm5sjHo9jmibXrl3D8zwajQYzMzPMzc0BIyXSXZ1er4dt22QymTG3aZq4rotl
      WWQyGYbDIbZtk0qlaLfb1Ot1Go3GfXx6tyZyz/V6ncXFxTEr+aBFrOyDkkOvAKFQiIWFBXq9
      HvF4nGazSSqVYm1tjU6nw8bGBqFQiKWlJYLBIIFAgE6ng2VZ9Ho9EokEoVCIZrOJ67q02+19
      3+E4Do7jkEwmqVQqBINBTNNUnweDwbHj5Xv6/f6+z3QxDIN8Pk+73VbnlPMGAgESiQStVou1
      tTV8379HT+zOpNFoEAgEMAxj7N4/6HLo7zQej5NMJpVf6HkezWZzbJH2+33q9TqGYRCLxahU
      KmxubtJqtTAMg2g0qhRiOBwCqGDa8zy1iyeTSTzPY3Nzk263i+d56phSqcT6+joXL15UwfGt
      BOHy/bZt71tYpmkSi8VYWlq6l4/sjqXf79Nut29q1T5IcugtgIhhGIRCIUKhENVqFRi5N9Fo
      lFarRb1ep91uKx/WdV0cx6Hf72OaJslkkmQySbVapVarEQ6HGQ6HFItFarUax44dU9bB8zw2
      NjYYDodEo1H6/T6dTkddy/r6OplMhvn5+XtyX7FYTKFL75c4jkM4HMYwDOW2fRjk0FsAXWRn
      CgQCBINBZR1mZ2dJJBJ0u10Gg4Ey4/F4nG63q2IDwzDwPE+5Lb7vU6vVcF2XVqs1Bmd2u12G
      wyG1Wm1s8YtMgz7v5r4eJPQ3TQaDAdlslnA4rJ7Jh0EeGgsgIi6FQJ/dbpdyuYzruqRSKRKJ
      BLZtKyWYhPMymYwKXn3fJ5fLsbu7i+M42LatfHv5vy7BYJBerweM3BcdYr3be8rlcnQ6HZrN
      5l2f705lZ2eHlZWV910ZH6QcagXwfZ9+v89gMCAajY4tNlnAjUYDy7JIpVKkUqmbLsjJ/EAm
      kyGZTGJZFqZpcuzYMZUc29raAlCwaTQapVKpEAqFxnIN90JM0yQYDL5vCiAbRrVavSV0636L
      53kPJBg/tArgeR7Xrl1TfnE0GiWVSuH7Po7jKMRidnb2js4vL9g0TQzDoNfrEQqFsCyLZDIJ
      wMrKyr5/dy/8/oMkFou9b9njZDKJbdsEg8H3ffEDDwyJOrQKIEkoUYBWq0W326XX62EYBidO
      nLhtP9z3fbrdLrZt0+l0iMViAFy+fFlBppZlqdwCjBQRHswLCYVCOI7DYDC4798lYts2ruuq
      JOPd0kseNjm0QbCgPrroCM/m5uaB2Lks9LW1NYUYwSjQu3z5MleuXKFUKtHv92k2m0rJBEmy
      bRvf99nd3eXChQusr6/jeZ6CV3u9Huvr6xSLxXvqskyDSu+HyA5v2zbz8/M4jkOv16PVat33
      7z5scmgtwGAw2Jcl9TxP+YaJRIJarUY8Ht8H2fV6PTzPYzgcqqBV/n0sFqPZbBKNRgkGg/sC
      WaFaNBoNCoWCSmZtbm5Sq9UwDINgMEi/36dWqwEjV+lekcckU30/JRAIEIvFFKkvn88rZO3D
      JofWAgicqQetrusSiUSYm5tTu/FgMFCJKVn4jUaDK1euAChuSb1ex7IsxfFxHAfXdel2uyoA
      FP4OoCxHJBJR8KkgReVymWw2SyAQIBwOU6/X71km17btMS7T/ZBer0etViMUClEoFOj1eu8r
      /eH9lENrASYzkrJ7x+NxCoUCw+FQYdbFYpGZmRmVBRaej87+HAwGFAoFlQGuVqsMh0Oy2SyW
      ZSl6teM4ihEKI7+83W7TbreVpdGvpVwuK+W8F7mBfr+/j4V6PyQQCNDtdhV15P2mYrxfcigt
      gOzisEdZsG2b2dlZer2e+r3f71MsFoHRji2+vQRyw+FQBZSZTIZ0Oq38fcl2CpoEqH/neZ6K
      N6rVKuFwmEAgoK7FcRxlgQqFAru7u4pWfbcSi8UeSBzQbrdV8muS+/RhkkN5177vK/8cRos1
      Ho9j27byw33fV4vZsiyF1sAIsZGdX2IAwfzz+TwwWuSy08ZiMYUIAfsSYK1WC9d1lUINh0Oa
      zSbtdltdY7/fZ3d3967vvdlsMhgM7tuCFF4SjJRgfX1dUSA+jHIoFcCyLObn54nH4wyHQ7Wg
      hTIggahApZKVFREeD7CPi59MJgkGg+Tzeebn51UdgI7m6P6w67r4vk88HleLZDAYKLKcMDx9
      36fT6dDpdO46JkilUqysrNwXPk6r1SIUChGNRjFNE9u26Xa7H1oXyHryySf/wc1QB8/zaLfb
      ahE+CDEMg0AgwGAwYHV1lXA4rKgNkjEdDoeKvDX5AsUihEIhldiS88ZiMSKRCJ7nUS6XGQwG
      dDodRQGQ73EcR/nHgkDJ/YviiTXyfV9VNElV2p3EBOFwmEgkwnA4xHXd+1JJ1u/38TyPI0eO
      0O126Xa7WJb1vlSB3a4IanevaCg3tACu6zIYDCiVShQKBcrlMt1u94HhxY7jsLS0pBYajHb0
      69evK/dFd3306xYZDof7jgkEAsptarVayh0SJTIMg06noyxMr9dTCTjLstRGYFnWGFIFey+o
      0Wjc0a4qCh2JRFhYWLjni9JxHPL5PI7jEAwGiUajd6RoD9pi+L5Pq9Wi1WoxHA7Z2dkZg7jv
      VA60AEIJrlar9Pt9hsOhMu+tVkv56JJFvBfaqLM2D5JIJEIkEiGVSjE7O8vc3ByWZTEYDNRL
      0V+OwKO2be+D+iSmkPsVdAdGC3F7e1udQ3xyUSbbtlUWVeoGdOl0OlQqFdrt9pgFuhVpNpus
      r68ruHZaEc+dijBkk8kk4XBYEQClyOdW5UHGDJ1OR1HeHcehXq+rPMxgMFBQ9Z3IPhvt+z7l
      cplOp6N8XNnV9IWuB3xCRtPZl7JD3ooIUiM7cTKZPFCx5DoqlYpa9HKNsiABBUuapqkqx2Zn
      Z8cWo67AwseXe45Go5w6dYp+v8/29jaGYSi3JJ1O0+l0iMfjRCKRqcGvKEomk6FarZJKpW7p
      WUgWe3Z2Vr3oeyni6omCplIpksnkocsDyHsZDAZUKhVlGYvFIqFQiHQ6Ta1Wu2vqxj4FaLfb
      imEpi0LagRwknueNUQ5g5EdnMhmi0eiY7wzjO3SpVFKYviSyEokE5XKZXC5HtVpVCSo5R7vd
      3vd98gJF6SaVT5RKvr9SqZBMJslms7RaLfr9/j6Gp2VZhMNhFhYWaLVaioItmWCpN261WjSb
      TeWb6s/l+vXrCnm6FfF9n3a7Ta1WY3l5mVarpZ7LvRBBq+Q6S6USsVjsUCmA67qsra2RTCbp
      dDpj7u7s7KxyX1OplGpnczubjC77XKBOp6OQF9nFJ//TITr9d6EfyM/9fh/XdSmXy0QiEUzT
      VJwaqbIKBoMMBgPa7bZyQzzPU4Xo5XKZer3OYDDAcRwsy1JVWsL7h/1ktUQiodwT27aJx+OK
      Lu37Ptvb2zQaDUWH7na7NJtNRZPQXbFer8fu7i7VapVAIEAkElEvwbZtIpGIgknl3+mKEIvF
      bpllKcou0K+gS/ejQCUcDrO6unqoKBCe57G9va2KlKSzhuRsUqkUpVKJXq9HPp+n1+tRLBbH
      ELmbudG62IDC1AXfvhVOvb7DShAlL93zvLHPu90u29vbJJNJTNOkXq+riq1KpTJWLA57uLtk
      bi3LUrh7NBolmUySTqcJBoN0u90x7ozO8YdRn6Bms0m32yUej6u6Vx1BsixLIT0Cb66vr7O8
      vKxasFiWRb/fp1QqKYRHv089mNRLG03TvG2c3bKssXzF/YBDg8EgKysr97Sy7W5Eaj/0RXz0
      6FEcxyESiShoWU9aep6nOoa4rkupVFKKkMvlbglAsGHkUhQKBfUw9KBv8iInxfO8sQDUNM0x
      N0R+Hw6HlEolTNNUwa4Urcu5ZZcTn1x2cDlGFqgs4FAoRD6fJ5FIKGQnEonQarXY2toilUqp
      CjC5Pgn2JDYQfk8oFFL+dqvVUlYpHo9TKpWUGZYHDyg0SCyMbdvs7OyoaxflupNaX9d1aTab
      NBqNuwqCBUqWxROJREin08RisUNV9zscDqlUKsDIMom1rtfrCp4WHpYgcbVabUyBZf14nkeh
      UGB2dnafdRPvQtaLLSd2HGcqijJ5kdN+l0Ugi13HyidFFs80JZv8fglu5TgxbaZpEggEVBGH
      9O8RMQyDZDJJqVTCdV1FWtOvQayQ4zgKXpPvrdfr6kX0er0x6ya0CF1qtRqe55FMJllcXOT6
      9etqJ+r3+1y/fp2FhYXbKjXsdDoK5bgb6ff7quOb8P0PW9ZXNqJkMqncnuvXrxOJRMZyNILK
      wd59yeagt6+UdVcsFkkmk2NZftM0FZtgbm5upADBYJD5+XnK5bLyt3TRYT69b4y+QOWh6otU
      P152fuHSTLMw0pls2nfpyQ/5v9CdTdOk3W7T6XRIpVJYlsX29jaWZaldRcoehWUaCoUYDAb0
      +312dnZUzCLMT7FI/X5/LOAWf1wUXVogWpalLJHjOCqOEhE6dSaTGcsqTxPf91Vm2rbtu+rY
      ls/nD0WJ441EAtlSqUQ8HufatWvqXcE4NUWeuSQdhRZ/0KZdq9Xodrtks9mxpKXQ15X9EI59
      sVjcdzJ9cU/667roAYgohgTOgHIHdCuhi24d9HPK3+Q/EaEx6ApTKpWUZdCPlYckQbZcg8C9
      OkIkP29ubiqMWY6XpJggQhK06vyjRCIxNXAV10oC+RuJZGfvhhMk8dBhXvzAmDssMdhkbCJe
      hu4mC4AC497GZF5GuoWIOyhxBUxkggOBgGoxoi82WfjiL0+KLPRJ3H5ywU7CqRL4yE3Jbqff
      jO/7ytcXLZYblp1Ad80ke63L5HWIEouvKIt+cqEI3CqL0HVdYrHYvuAqnU6roNt1Xer1OgsL
      C1OhRbE4pVLphtlUqVe4m15BuVzu0C9+GKFsOzs7inouMdrkMZOeSTgcVi1rIpGI8vdvtLlK
      yWmtVqPVau0pQLPZpFKpYNs2sViMTCYztoPpu79+cXrUfpDoGPY0Uz65OCXISSaTzM3Nkc1m
      sW2bXq/HzMyM8sHFlZr87kkaggSk+u4hlkDuTRRqUuLxOPPz8wSDQRYXF8nn8wfuytJBTror
      nzx5knA4TCgUGnN7Op2OqiM4SMT9ut3uCHJsJBKZ2rV6mkjbyEnRY5/7KdVqVcGcBwEwkhTT
      kUZRFgEMwuEwMzMzisclkkgkCAaD1Ot1Baq0Wi2q1Sq24PJ6AYokY2S3nsS1dez9oJeju0I6
      xUHXYv1n/TNZQL1ej8FgoBI1uVxOwbXy723bvmmgqMcW4gZNWipRBiGFSXzRbDaZmZlhcXHx
      pi6J67o0Gg1VzrmxscFgMGBmZoZsNsvu7q6qX5ifn7/hucQHvp0g2DAMwuEw0Wj0lnd/gb67
      3S7pdFrFUlIWKu1m7pcMh0NarRZLS0sKJZwUWfzBYHCsSVmj0SCXy6m1W6lUSKfTpNPpMSq9
      JMokyauLLfg67C182O/364vkRi9Od5v032WH0auqZDHrPB05Xi40l8upAFr8eElC6bycG8mk
      AuvfM/m7uFCLi4tsbW2p9ukHtV8RBRcLIn6qYNKwV5MQj8cpFossLi7eMAYwjL1GWeIX30zy
      +bxyzW6HG9PtdgmHw4py0Gg0VI5EMvwSH94PEeBBX1+6SBwTDAaVVZxcSzpIMLn+bNumWCwq
      asykS2mLedBL/qZdhCQb5PeDFp3ciB4XiMsBe7wfWTjCfZGePHp2VxaV7MZ6lvpGqMjkQwDG
      rkH/TI6Ve5cXv7GxgWmaRCIRyuUy165dU3kFXer1Otvb2yogE+uVy+W4fv06vj8qvxQ4bmVl
      5ZYSY8FgkGQyOZViMSm5XE4F/rcreu9Teb6Cusgz6XQ690UBdE9j2uKXJKL49jqaCIy1xBcl
      EOsu9P1JFE1HEQ3DGMUAUhEViUQIh8PMzc2pKHkyQXUzf3RyYU37XFwRuQhxY/r9/lgHZ9lJ
      S6XSmGXSb2aaTAseRbkEzZHf9fzFJK0jFAopxXFdl52dnX0dGyRrLU2lRKT/kMi1a9fY3d1V
      jXBvRcSVuVnCqtVq3XFSyzBGdRdC9JuM1wzDuG8TW4RaH4vFplKbJzn/tVptDBJttVrKcxBk
      T6r0xHqJS6rnlvTN2QZU12VdZCeeVoAgO7deiaUHL5OBqV41NblopcxQN4XTdu7JHV8PXPXP
      JhVPLIYO0epKLNetQ2eO4xAKhZiZmRn7PJfLKc6QJFfy+bwiaAmsurW1pVL0+u5drVZvC5kJ
      hUJcv379psdLp4u7EYl7xMX0fZ9MJsPMzMxdQbEHie/7aspOJBLZpwDyneFwWHkJOnNAzqFb
      e3mHMjhFiIo6yijvRGTqViSmUI+49UUtZkgvNhkMBmo3nYT/JpNk+iLXXZ7Jm5oGq8rfRSmm
      5SxkN9SDXjGnk7CpnmiT4/L5vMocC+1ZCsilmZbuw+vXKexRaesoaJpkdZvN5i27E2LtbhYI
      3y2TU2KOSCSisqT3K2vs+74CN4SWIsCAfj1CMpTuFZLQ1I+BPdqMIFYCrUtyc5KdMClKAXzf
      VzCoDJvQv0xPSMni73Q6ynfXi9gl2TBNJhe0nmMQpdOTZbqFkYUrPqNwxuW8YsrlM911cxyH
      mZkZ1tbWDnw5hmEoN1BEikbkOi3LIpfLjV3TJDVC/Pd6vU61WmVlZYVQKESlUrmtBlqGYZDN
      Zm/YBU9GLt0LkWKj+yk6xUNYAdMkmUyqli2VSuVA0GJnZ4eZmRkFK4u/f6ttapRtkwqbycUP
      4369BEmDwYBQKKQWoywyIRmJPykWQsyT/F+3Arp/LsfKcZMxhSz4TCYzNsgun8+rKqdJMQxj
      rC/QNPE8j3Q6PRXtkWBqY2NDURTk2nQmrA6xzs7OcuzYMSKRCGtra4p6fLuUhoPuCUaJy9XV
      1Yci2eX7vsLehcx40LuIxWJqU5E2OJMim5WuQPI3PX6dvIZJr0GpSKlUmvog9aAQ9mAr6SUj
      bFDdz5c622g0SigUUl88mVfQLYBAb7oSHPQgDcNQGLAogXBDdPqwfj+CqR+04wjN+kaLaXZ2
      Vt2DIDsyT1hqFVzXZWVlRT2P5eVlms0mtVrtjjpLG8aItDWt75BAyO+X9Hq9W64laDQaqgGB
      uMKTeSHYa1ogEgqFptagyyxjwzBUR23Jg0jXjlvZGExgX5CpP2jZ0fSdW9wMPUaQfIK4BMKf
      F6xfj8QnL0wWrVgRUa592voeaiMPSZ8OKbv7ZLA7FvC8h9FP21HS6fRNgz29K4bwf4TIJVDt
      YDBge3t7zGIlEgkWFhbumNkZiUSm5g0mA/oHLbdTSKNDlOL6SMZf35QmaRC6ay0i7182Tl1h
      Go3GgY2+ROH2BcGSbGg2m6r8btpOKRcuZLBEIqH8s3A4rP497DFFhVevk9PkQeg+vlzcJKFO
      v2g9WRWNRlXGtdVqjcUoeoA0iaHLYtXvTwrDb0dk55JdWI9RarUaw+FQTawRuZv61aWlJdXH
      s9/v0+/39w0NOcwibrIQ3XQIXLf2k5uEXg6pv2MdNZSB5cJmvp0+R6a4J5OFE/JFkzCj3MDM
      zIwqFLEsi9nZWZaWlojFYuoCXddVu59YmUnfT09ECYokO5sOs+olmVJ4srOzo9LgeosS8cV1
      gptuFSZ3h5u5PjcSgY/1lyjw27TWLXdKbhN0amVlRRHvbrfbxIOQgxafvtD1XXiybY3neWPM
      XeEHiQhCJYVPUruh87qEC3YrSmD7/oh7Ho/HyWazyl0RmrC+qOSEMvS51+sRjUZV7ar0nMnl
      cmr3lxYqmUyGRqOhjpU+O5PxgG4m9QejPzS5juXlZZXBFkQoFotRr9dVHTHsWQJxf+5lJZQO
      uepkQT3zLAon2dY7mYauK7KU+92MUv1+yEG1z3rBlXw+jf7u+3v1FVKKms/nFegiz3I4HBKJ
      RGg2m9TrdUUbmXTfYT+crottmqaC0XTsWwhRusiOnkwmGQ6HY3j52EnfC8yEdy1waTgcVjt4
      oVAYu3lZwJKRFHhVlGJabaxhGGoQdqPRYHZ2VpnEYDCohmDIsbIL6Yo9jQZ9O6IXrkw+q0mL
      KtPY4/H4XWH395Obc6dyUHwnIlC5vGff94nFYvT7fTKZDPV6XbnP8pmIxF7SJkZQNml7OWlV
      dUtzM0h06l9Nc1RULNwWMSuGYaiLlID0VkQowcViUWVms9ns2DwscZtECQRhEOswLajZ2NhQ
      n0sDKWl0pe+Y+q6gu1WyS3c6HcX7uR0RGu4kz0h+F4Qil8spLpPkW2ZmZh4a//1mIgHujRJO
      OtXZcRw1X6HRaCiOvmmOilwm8xrD4VBl4GGvDkBHKPV8kGyaqVRKkfumKajv+9NbI8oOKtCg
      3jAqm83eUds/SerE43ESiQT1ep1QKLSPoCYBuM76002Y7i7pfr0Uoshx8lLkOgOBgFLYySq1
      Vqt1wxzBQWJZFnNzcwdmo4Xqu729TaFQUPdzEP/+YRPJfxQKBWq12g0RKYFzo9GomskgrU82
      NzfVOpDu1fozdd1Rq8jFxUVSqZSCOMVNnoTMZQ3IZj2NSgM3UAD9RILzh0IhFhcXFepyJ7uX
      LGRhf4pJ1IlY4qMHg8GxovuDzqWjRfKw9BsUSafTY10v9KBJHvidDKaQkamTIucV6FXyHHKN
      k+n/h1FkB5d4blrGdvL4TCaDZVkqwaWDG/r71Cn64vZIXLqysjIGx+uKpy/2RqNBt9tVhUX6
      hijr7YYKIAGJmBNxE+50NCnsdVWQhIUEzJORvr5LTwbE8qDkZ91CSK2ALqLIsiNMI9bJ5Ehp
      gHW7hSi6CD9F/7vOOBVX8nYtzmEV3x/Na5ZA9GbSbrfZ3d1VmVtd5LnJ3yV7XCqVqNfrNBoN
      rl27NvZ8J92aSdGJnTqR0/O8g0ckeZ7H1taW6qUvX3JQWv5WRfe1xR+fm5ujUCiMabJ+U1I8
      I3/XF7yuDMCY2ySKJTuVDqlOvijZYQCFXmUymQPvV1CuQCCgSGNy/kmqh3ynnvn+oCx+/T3c
      aglmtVpVO7MkEg3DUMGu/tyE7mCao1Y4tVqNSqWCZVnE4/GxnkmTxfCw9y6mbaaGYUxvjtvp
      dFR0fj8GJ8v5pM5XAiM9epcbkuMnNRj2w1uyuPSsNbCPanuz+5FzlMtlotEo0Wh0Kmoj0J70
      Uj0oyzx5fXLM9vb22ObysInv+2ozK5VKlMtlZmZmbqlCLxqNKtqMtJSZttl0Oh2FGMIoA7+6
      uqpGV0kydrJ/qix0sbo6F00QTs/zxnuDSipf8PT7PRCj0+modolSAqn79Pourrci1Pn9k6Q5
      /d/faZyiZxwlky07lu7GSBnh5ERLOc+kZZBzyu9CLJTU/cOkCFLDIZuSuJiGYdzUS4jH4+o5
      y1TMaRuMJMJisZhqXCYVbFLHLrmoaXGpHlNOJtvEzVY+h7yYacUx90tk8esZYp0uMVnIrpe4
      CYYvfCNhqApsq7s7+oK+mesxDVWQQEwGy8nfisWiauoL45YKIJvNqsWgo2hyDwL/7e7u3pNh
      Dw9CZFMIhUIqERWPx1XhjASeNxJpQizPWtwYITSura2pjHKn01FKIklXcYFgr3+SnlQTUGWy
      lFZyArJB+r6PLbx+weofpIiLIX673nFNF3EvpE5AcgVS3CI3pNMp9Iyynnn0PE8p3kFT3g9i
      osK4zxuLxahWq3uIgmaZREEkoSP8JbFmcs+SDKpWq0o5DrMlMIzR4BDP81TtM+zlhTqdDqVS
      iYWFhanBqSAyOu/MNE3m5uZUNz/f91XpqZxjeXmZXq+nIFN9Z5c+TDs7O+r7dIqFvB8pitdj
      AtO27bsObO9UhM4aiUQUPUAvcp4MFiUY1hVFDzxFKUQxZOauuHXyPYFAQLE570Rkt9bJe/Li
      ROFc16XX66m6Vdu2VaMtvaZZh+lkFsJhF2mcJrGiJPfkucjC1t+d5EN6vZ5qf6Lv2jrrWM/U
      6/++XC5P5VKlUim14D3PU89TRK5jcorQTWHQ+y2yMGQ3FUUUMzXJFRF3SdyQgyzFtNyCuDGh
      UEhlEScVfxJele+Uc5vmqLW7sDrl/9PgOIkVRCH1xJ2I/uIlpjjs6JCO0QulGfZIcOK6Xr58
      eQx2LhQKqtmtnhORc0q8eZD1jcfjYzGgXvMhG9Bkk2RdJhVSXOb3vTm8LDDht3Q6nTG6hR7N
      y0KW3XVSZGedfIgSGziOQ7PZxHEcCoUCqVRKFVvIg5yk3crD1VGocrms6oPlcyQwd2MAACAA
      SURBVDmH/H8S0pVzy3kmC43EQh12CyAWOpPJqASgLH792qPRqKoX6PV6JJNJMpkMly5dGuN0
      yfOWTeIg8X2f+fl5BRoIgihz3rrdLo7jkEqlxlyhm8n7rgC6SF/4arU6Vjg9iaRM7riyCKcF
      sCKS0W42m2NdCKbBprJQ5Wf9hcnLqlQqY13Kpom4cPIdkxRvsXSpVIpoNKrqWg+zEti2vW/k
      k3TRkJ09GAyqGm+pH4nH42OTN3XrLqNsLctiZ2dnKm2h1WrRaDQUEifWNxwOK+av5AaEanNL
      93OXz+Oeivhu8gAlWzoZzEoQo6MuN1s48tlwOKTdbqsi9YMURjB+ndGp7+qy+9/IbOsSjUbH
      FEncuEAgQDQapdlsHvoA+CBpNBoEAgE10lZkZ2dHJciq1arqL6Q/r6WlJYbDIRcvXiQajXL8
      +HHq9Tq7u7tjx0kPUPmb0CL0tieu67KxscHS0hLJZBLf99nd3Z06aNAwtPkAh0X0GVDBYJBY
      LKY6o8lC12FN2IsLJMrXcwOT/rQcI8Q5y7LUAO5J6kMkElEBNOxv0iTfrbs1wJirJi9LukSI
      tNvtscF0vu+rSi8pETxMQ+tuJjp7U9wSHSL2PI+5uTk1jlV3X4fDoRp/1Gw2uXjxIqlUimPH
      jqnsvWVZVKvVMSjzIPG80WBCQMGzruuODdeAPXr2oVIA2Jsu2el0FHlK7wo3Ldmh15tOg94m
      rYj83TAMVQ7Zbrdpt9tjY5Kk7lRozDpEe6NdX1e8bDarZtsOBgPi8bhq9iQiSSXJPjuOw+zs
      7ENjDQRgEGatLFxxd7rdLteuXVO0mmKxqGKvYrHIysqKgicF4l5bWyMSiSAopYxKhb3ai5tV
      18l1TNKrdTfs0CkAjLQzFoupBSFdJmC8Tbvs9LKAdHRAREdapu0c0tJQZmeJjy5TLXu9HtVq
      VV2DjvPru75udUQRZcSSTJiRtoiTitput8cKcwQ5utsZuA9KxPWQexAm76QCSy2z/ncZXCgd
      IxYWFmg2m+RyOTzPo9FokEwmmZ2dZTAY4HmeAks8z+PatWsHXpdQLvTEnJ7pP5QWQBcpAhc0
      SBawHgSJQhzkP+sY/STyIp8LJ6Xb7ao+qRLghsNhZmdn2d3dVSZ9Wn5CIFg5J+y1nDQMQ3XM
      mJZ7kMDNMAxVYCO97x8GsW2bo0ePqhrd48ePqyrAwWCgipsE6YnFYiwvL6uOIeVyWcV+MoRw
      d3dXeQGSQ5AOIJVKRQ0q0Ydk6GIYBisrKzSbTVU5Bnv8Mc8bjWM91AoQDoendoMWv1JHVyaD
      JF10KFX+/eRn+s7QarVot9vKVel0OuRyObXL6Qtd383lOkXZHMdhZ2eHVCql+u4LD0Zwfx1L
      B1Tm+FYC68Mk+m4r7k4oFFKws+u6hMNhrl69qvIvkgRMJpNEo1FisRjdblctaOnPuru7C6Bo
      EXq/1/n5ebrdrqr8kjkHYlmq1eqBuZVer3e4FQD2zwabVhwvomcXZdfXcfZpx0kGcdLKGMbe
      3KpQKES32+Xo0aPUajW1C8k5dEhPRvkIaQv2+hGZpkm5XFYjVWXusc6elHu7l4X7D0okP3D5
      8mUsy9o3vG5+fp7FxUX6/T7r6+vKoh45ckTldsrlMvl8XlGdpRRXf2eGYSiQYDAYEI1GFS9J
      GjCINZ10e3U31jTNw60AesWP+Pd6MHtQYYse7E7W68J+xZEcgR4vyCKW/kPb29sMh0MSiQTt
      dptkMkmxWByLGcRiSBZYBg72ej2VxOn1etTrdSKRyKFsa3K3oqNx8mzE5Wi1WnQ6HfVcfN8n
      nU6ruAH2GpQFAgEuXLjA6nutH6XcVbL8u7u7qo2/vDPJ7grKJMoz6a7KZphKpQ63AsAeHq+7
      GpOdHORhTpZJ6nxwXVkmXSr9HPKwpL+/67oqsyiog3SbkO/MZDIq2NWz1p7nqQ4QpmmqET7i
      738QRe5fNhS9WH0wGJBOp1U+oFqtjr1f6e0vOQPbtllfX+fYsWNqiIdlWaTTaZX40jc3USZ5
      tisrK2oYnkyf1K/RMKYUxBwm0ZEEfXEahqH8QN2HnxTZMSY/O8gn1HttChddfhayWiKRUH7t
      8ePHFeVWdhv9WvVeor7vk8vlHip8/yARdEbej9C7J/lVEthGIhEVO8kcZRjFWs1mU5XGCsVh
      OByqZgztdltl76VLSLVaJZPJ7Cuen3zPhmEoCobEFlLu6vujct9DqwC6Pz7N15fPZZeZdvN6
      kkzvNizBWr/fJxwOj7EH9dyB7ORicQzDUA9feOky7lR2FHG55GXq1/NBWPyAoiDrv8vzCQQC
      zM3NKWROmLsiAlsbxqinU6lUotlsjjUtyOfzNBoNZmZmFJu2VCqNkQX1Rls3EnG/pGHuwsIC
      lmVRr9ep1WqHVwHkYd6oPbYsULEGk26F/ruMGpIePTrh7e233x7jjovU6/WxopxEIqHacuiD
      1yZ9TGE3HnZez52K4zisrq7S7/dVm0rYa5ZbLBbVZ+l0el8HO8l4C1BQq9XY3NwkGo2q3ToU
      Cqm+UdJNT2jW6XR6XxKs2+2qZJrAqboI/b1QKGDbNgsLC4c/BtB9+mmwoGEYU1mh06RUKhGJ
      RFR3MQlYZZeabN7r+77KDotsbW2p6Y+TCS35N9lsVnW1+6CK7/usra0Rj8eZnZ1lZWVlzM0p
      l8vUarXRAptSH6y/T2kgLN04ZBa0wM/ZbJZOp6MQs0gkQqFQUH2ehCqjV+YJwU53x1qtFrZt
      K+6RuHGHWgH04oiDRG+fciORcTt6g93J/qcHxRu6WwTjY530vEAsFjuU/TrvtYhbGA6Heffd
      dwkGg6PFpLWvl+q2adZbLLAkCS3LYn5+nlKppAYmCrNzd3dXjZqSCUB6B2jLsjhy5AiFQkHl
      HoRX1el0lBWX9yVKkUgkRp1IHuiTu00JBoOqCuyg6i19WvxBrhKgEJlUKsXKygrpdJpTp06x
      urq679/oBdtCTJOfBY4VpZM+psFg8LbGHz3MItwoscCNRgPP8+h2u6pGV3b+af2VhIQ4KTLg
      WsbISodAcadE9CHq7XZbtZoU1kAulyOTySikTicoViplvvrZGcJBi5/90pnDbQEikQiNRmNs
      av1BosOeeq5Afq7VapTLZaUQsvOIyLESOOvHwZ5STMYawiqU2oUPg0ifT73AXI/JJgdeTIqU
      wsJeKatlWarYRZdkMkm73VZFSDqYIIt6fX2d9fV1fH9USyzJS6k/0N/lcOjykRMJfu7zcSIh
      63BbAMHYha58o6h/ckHrf4c9BdGD3cnWerKz61Vq+oKXz/TzyOf3a5buYRRh0IrrJwGp7/tq
      dNGNxWc4aKu4SQaRS8dAXcQLkASZkAxlQ9R5YLIGJtEn27aIRUIs5lPM5eK8e71JLGJjWYc8
      EwyoJr1iZm+FIDapKDqN9qBkms4T0mt49QL8g/g50t/owyTz8/P4vq+ahknHC6ngc12XZC7P
      5z79SV5/6c944/wVlcj62heP8O9/+Qz/229fZm2zT35+hVgE6o397VRs21aYv4hpmiwsLKgG
      A/F4XDU3HtEg4PFFm6eOJak0ujyxGmet0uPJj82TTYf51l+s0x94BAPW4VcA2DODeguUW5XJ
      gFZE2qcIEqRTkSf/JiK/6wk6z/MeqlFF91IMw+DJMzNU6i6tLoCh2ko2Gg02NjaYncnyg9ev
      8LkXHsUzEtixGF/84lHm8nWefjLBxz93lD//xo84umySO/Ec0V6B3/n6N8e+Q1wuSVSKq5pO
      p9Uxy8vLyprnY0P+m68tEXL2WLu7A5e53Ci2+NzHF/l3L67z1c8feTgUQHrGixU4CPOf3Pl1
      duhkwYxuFeR8es+YycJ43ZXSA3LHccaGOXyYxPNcfv4LeY4sxmh3h5Srff7Xf3GWRqO5RxsH
      fM8jHE2SiGdY295iZ73H6cUV+v025d06i7NJjFiEQHcXyzkYRdPfeWZmlnphF8kGCM8qHo/T
      6g3o9l2Ss8cYdqq0GhXC0QAYQZygjeu2iEZswH84FABGeHE8Hlfjj/QcAYwvTJ0bBOP0aSnW
      luP0ZrriO+rn1akMIvKZID8fluBXF9cd8uyZEE+czmCZBtlUiKU5n3TC4vrGXsOB7/3Zt2g2
      6nz3hz/G7DV55GSGj515gqtXL/LnL54nnauwu1PAuWqwlsvTqVemfp9QLkSOnHiEHSvAseUc
      1wpNVpdmOX91g0dXl0gHrtLoDViOJrjeDFL2PL74Vz5Dp75DJBbEiqzy0SeyxHLz471BD7sI
      18T3fUIBCDg2g+E4t193kcRUymc6KqTvJroyTXanO8i1CYVCZDKZDwy94XYkaLv83f9wkZ/5
      zCLWWIUcbBV6vHGuoPr/9LpdfHwatSr1VptytctHH81ydCnMYyci/OtvnKfT7eH50Go26Pb2
      Cth931cZ3kmXdH75CKYVor72DpHZFXKLq8SjJu++/B0eP3OCuYjLH/64Ss13eOGpJIFQAncw
      wAkGcAIxbDPJTqnycCmAyGzG5tf+/rOcPBIlnQjSH/g02kNgtIgTsQCpuEN/4OF54719dGRH
      FGESPdJRoGnIk+M45HK5A3MTHxT57M/8AoHuLgsnPsbjx1OUGkMCls8TpyL81c8fx7RGGW/P
      N2h1A/yj3zhLueaxXugwk4rRaLX3nbPXG/Djs1U+/Wye3/g3l3jlJ9dpNEZVW1IyKtJsNrl2
      7ZrqOmeZJrZj4roewWCIZr1KrVwgnMoRdky2Nzeol3c5u9nmN75xnuzSKV564yrX14ocXV0g
      aNbxvD62EycUGNCo7Dw8LpAu9bbFGxcqvPR6hbOXO/yPf+cjNNsuO6URinB0McpSPso3X9ri
      n/zmefqDkcszScqCcZh00jIcVF32QaYz61Lb3SCdX8X3YRie4bknoximzSefmSEQqhOKzWIY
      Fr3+gN/+re9B6CTX332VL/7Ul6l3BwR/9CdcKewvV9zaqfGNFzf55vfXGQ5dYOSGXr9+nWg0
      SiqVIhKJqEQWjHhZ4YDPr/63n6TRGvDq22tcbnf50k9lOXmkxuvnruEGe5xrdihcH2WUf/zW
      WS6++To/+B78/p+8xn/1K4/z+efn6NRHHSIs3IfTAhiGwU6hxbMfSfH6hR7RkMdnnp1jdTHG
      6mKMZHzUlvz4SpzdUpdL1+tkUiGCgQDd3l6bE/lPsGPJOHuex+zsrKoPlgyw5BImq7g+qJKf
      z2OGM3TLm4QSUSKRKBZDUrEuyUCJSHKFbmfAb//JVd46t4VvRQiafVZPnCYeCbF26RztAWMw
      qcRYpZpFsTTu70s2WZoQTFaUrS6l+WtfPU42FeLxUyk+80yO1cUY8agDeHz+uTzbpQE/eWeT
      WCxGqVCg1Rltiu1On++/to1h2Dx2KoVpGvzozeLDZwGGwwG27bBegNfeqfPUSfj6dzb50ifm
      Scb35wj+1i+dIBEL8FMvjLqZ/Zf/08u0O3vDFHT6rhRtTPYesm2baDSqCqmlEdQH3Qq8/uqr
      gAH4GBfP42PwzCMOP/v8Mf7l77/Lb/7B7+F5Pq12d5RB9zxmcll6fgDHssgsn+LEkxm2trZI
      JpP0ej1efvllPM+jP7wxlVknIYoUyh3a3SGR0P5le/FqbfQ+vC65XG5qQ6x+f8A//903eeWt
      XeZno1ze8B4+C2CaMurGY32rxn/+Syd453Kb187WOL4c3qcEAcfiqTMZErEA8aiD58E7l2qK
      YCV97fVs740WtlQX3c10+YdFdBdw2G/z6FGLn35hlkK5y6/+X69Tb3SUeyk7db/fZ2Njg+p7
      u/fZs2fZ2dlha2uLQqGguEHxeFwNRbmpmDb5uVlSsSBf+cwCwcD+jP/iXJTf/cYVfny+ybW1
      7QNnvPm+z3ahycWrZcqV2sOnACKGYRIN28ykTD72WIpvv1zj4tU6T59JEgqO7xC6b3/6WIJv
      vrRNo9m77eZTkivodDqqfeMHWXTU7N3LVzn3bol/++2rfOsHO8zPL9FoNKYWnQt6I9VXQmjU
      F2Uikbh1BZg7w9c+tkij0+drf+UpMrPLWKaBgU8oNksyu4ppDFg5/lNcvl6m1enfUm9Q37/J
      mNTDLgPX5ne/VeOPXyzwxMkAmyWD3/vm2tRjVSWRbfL3/pMzfPa5ZTzv9mf1plIpAoHABx4B
      EvE8j6tXr+L7MDeXJ5ebIZlMsbu7SzabVQMybkcku3s7ksnNkUokCcTm8M0Ywdg88dxpgtE5
      GBSJpI4xl2pwbX2NRCJxy8zch/4tmqbJpettPvvsDJ7b5/s/afObf/AuEjtNgzE/eibDX//Z
      I0z56KZiGIbqc6kn0j6o0ul0VD+eXq/H9vY26+vrVKtVtre3yeVynDhx4rYWtO+POmXc8mAW
      t0934GKa4LoWgXCW6u55rGCWcqmIHT2CN6gTTUT5yqdXAW55lO9DrwAAgWCY3/qjDU4tG3jp
      4+Rnn+QbL9VZOPllQqEI0ViSQDCE4wQIRbNEIjHWdjzCoSChcATLvD1f/ka9iT5IonfEmOYq
      GoZBrVbj8uXL5HI5xc25Fdne3lYlkDrlfKpLWrjIP/tXv89rb51j0KvRa25g2DGaxbfBbVPd
      /jG14rvUt3/Elz8RIWD1VR/Sg65d5KFDgaaJaZpUmib9wRAn5WCHIrx6Ics771zn5MlPEU3O
      Utt6lUAkR7tZwbH6RLNxTjy+yFLMxvV9/uz7P7zhd7iuSzbh4bl9FmYjXN1oU2maD3yu2oOU
      arWqOPX5fJ719fWxz3WK+ebmJslkkqWlJba2tm5qGQ3DUFTnpaUlNQXUdV1arRaVynRKRKt8
      DqM7ir2G75FHu8O95mPRSICji2HOX3fJZrO0Wi1VITZNbqgA0/gvh1maXQvDs3j32jbPnFri
      Wz8usDAfp1N/l0GvjxHIjnhA3pCA7eJ6MOj3MSfMt+/7eK6L57mY1ogsN+g1aLUsCpU+oaDN
      Fz8+R7vT4fVzdUqNEOYHrAZ4OByOwb16q3gRYc2KSA+ehYUFKpXKgUMIpVBemo3B3kQZ6Zy3
      vLxMrVYbC2aHrsd3f7RFKGCN0Nn3ZBQOv0d1weD0aoCrmxX6bnisQ980uaECTOPNHGYxDANK
      l3i55PHK25dxhz0+dXyLpYUsw0GHbnMD07LBH3Jq3uGfnX2NnUiWTqumzuFj8NRHsnz+6QiZ
      hMn/8s8v0OgGCYaT9DyfeCJMsRXmj75fp9Vq8LXPz5KfSfKtH2yxWQSfKWbcGBX2dFt12t0b
      vIz3knEAjmNjGOYNX979lFAopDp0A6rD9aRM3qu0Np+fn1ftR2QjFR5/vV7fZ03a7Ta5XI5y
      uUyj0aDRaJBKpVheXqZUKo2qAi2Tz3xsnljk5uib65l8/cWWik30Z6vLTV0g3dftdrvv20TJ
      WxbPHVFk+31MBtiWx6AnQ7jBc0cLKmT3+Opn0vzON8tjL9EPpfkv/tZXyCUDfOtP/5SVk89w
      5cI55o+exnK7hAIma6U2RrPKqdNP8Mo753jsTIDVo4vk8zaXtvvk4wau1yGaWuXy+bfphWf5
      5LOPMPQMvv39Vzl9fIlz725w5tQq1y6dAycMGCweO0WMLj955wJPPXGa65tFGu0hC+kAZy8d
      3Ab8fog0mq3Vajc87iBXZ2tri5mZGU6cOMG7776rGt1ubGxMXYh6llgUplqtUqvVyGazZLMZ
      PvtMkqBza5Y2mwwALeLxOL4/Gll7Rwqgy8OGe3u+w9//38/zN7+2wMcen8E0xwPXzz+f59yV
      Jm+926U/8EjFTY4teySdCrV6ECt6ivLGazz7sWfAsIhEl9kulVkK5/AqCexelUce/SgEglim
      w4V3vsfi0TP8tZ99iuVcm5e+/yrZ2HFefLtBZm6J7WsXeOGznyNkmQRT87Sv/JDHnnwWTA/P
      N2n0Bly6WuDpx0/hA8urqwQsgx++dOP45H7JrXTbuJF3UCgUGA6HnDlzhs3NTdbW1m7Y9Vpq
      jHWRxWtZFr/w3z+O49wabnN0OY5l7OIxGokrLtykEtxyIkynFj80Yhh4vsUrbzf405e2iAZh
      OR/FNEcJHtsyef6JLE+cjPAzn5rha19YIBgOYUeO8YNXNvn699b5yEdOUyls0ez2GPYH1Nsd
      fM/HbTepVUvgOPgY9DyLmUSIeHqOSn3Ad1++yHf+7BJGMEG50cNtbGNGc7TqTUy/w0a5z+Mn
      Ftgt7BLNLbE8k2B9p8bJo8tsrV/DdByGnsGQANmoxXah9MAfnwwVvJHcLKHV7XYJBoPs7u7e
      FDGLx+MHfp9pmvwHXzlOdIr744RzOIEw7mBEvDOtIMEA2OaAc1faGIalRjNlMhnC4bCaMfGB
      QIFuJoZp0R1Y/PrXC3z9uwU+/kSCTz87Rzxq43uQS4cJBkxsy8Tt1hhUfsj/9wev0+xH2bh2
      AQMfw7Tw/f073kbt4sS3nR9jmp67eAWAN84B566ooyKzq7x49So7TeCtvXOcUz9t3tNncCPJ
      Lx9jNmbyxtlL6m++7zOXi3B8+SjXNxts79b3bYDZbAbP89QgDBivtZ7s23mj3V+6PB8kN7I0
      8dyjdGuXcIJJLCcEvkEl+HG+9pULbNUusLHrEs3MMp9LQTRHc/tdzr67NiI13vjRfLDENC0q
      Tfjjv2jxhy9eAn8AmBimTSbu8YWPJfn0xxaIhm2+/Ml58rkIoaBFMh7g+laLX/uty0RjNy9+
      vxXQoL17lf10rwcvvm/xxJOPcfmNl1k8eorjRxa4ulnmhUfi/PSnEoSjCYbDIf/n71zGjuQ5
      /5NXmFtcolHeJDm7xHe/813VcEyYtZlMZqxrRqPRIBQKKT9fHzwIo2ZVsVhs33xfybeEwyH+
      3t94nFRierLNMExM0yKaPkZj9ycQPUN1/SqR6Ca/+OWP8j//+pt84niec8MOQyfGc499nlfe
      +Ke0Wq2Hlwt0t2IYBoZpY5ijh9zpGVy81iKTMKjUunR7LvmZCLPZMGcvV4iEbPoDl0L14UHF
      blUKOxucfvYFji8sMui2qAwMzN1XOf7oYySyy9h+naNLMX79D88zl4kTswzSmRilWps333hT
      Lfz5+XnVy0ncHhljGgjYmO89a+kgJ9PhlxYXKRaLys2WuW1y3PNPLvCf/dIJbHu6Cx6IzGCZ
      Hv1WgUG/RbPj8eo72wQDEWq1KoupGgQybKwX6Rs2g3adcxcuAx+QRNi9EMMwGPoBfuMPS/i+
      Sz5j8I3vb/GF52f54ieWCIdsfvtPNjCMh2Nu162KYcD88nEqV8/z8nqJx04fp7x+hXK7T/d3
      vsUjp4+xnDE4ujrPf/03vsCv/eN/QS+/wNXXL9PujwLKcDjMwsICW1tbisacTCbJZrPU63W+
      9MIS/+kvHufC1Qbfe2WXrUKboevzwlOzVOt9zhxP8E9+q061tr94xjRNPnpmxN+fhOTl58bO
      q8CeRblw4TzPnYiTfW845OkjGV57+20atS3euFCh2x0NLDn0Q/LeDxn5uSaFGvhehCubAxzH
      wvN9KvUBhnVzBZDhGv1eh3AkpmqNR0U1HoZxQMr/fRGfC2//RP328sujgXKu6/Lyj9f5xncu
      cvpYgl/+6kdodc6ykPdw7E02t3fp9vpqpOv169fHEmU7OzssLS2RTqf58ifnyKZCfPzJIB9/
      Mofn+biej2PLwDqfd69V+b1vbdDrjec9PM/j+68V+PkvrSgUb5r86393jZOrCXLpAKGATTYV
      AvZikOMrCa5unCObzWqU+oeoK8T7IYZp8vqFPv/s/73Ao8fjoyL8A+I0yZwahsFzj8VxPYOv
      fPo428Uuv/VHO6MgEItWq0ksEqDT9wmFwocWWRtBoDFmMj7/w99+TCWfXnjiEXwf3rlUZqfs
      Eo1GVQPax07NkE4GGQyhUB81zC0WClhWfuzcpmmMLea3L1V46tEc/+bbo+SYjjgGAgGKdZur
      G02OLsVod12i4b1l6/ujhfzjs2WS8SA7hRaf+/gihsEY2bFS77EwGyE/4/D6hS6ZhMnCTODD
      GwPcjvT7fWazAT7xZJZXzzYwjP2TaaQZVC4d4HPPzWPbFj/9qUWOr8T5wvNZvvqZOdIxn7/6
      mTy/8FOLtDp9StUBrn84FUDEw2Fzp4Zpwm/+28ucWEkQi9q0uz4XrnUYDoeqhvdTT+f4u3/9
      JM89nuWbL21Tb7QJhyx+8csrRCP2PvdlZBl9Ll6r8cM3ymwWOgzdveBXBt4Vi0VK1T4Bx+If
      /NqbJGM27Z7Hmxeq/PEbUTqDDD/40VWubrt87pMnWZ5x8HwPJ5jAHY5atKSTIU4fS3JiJcbP
      fH6Vn/tslhc+mv2QWQA7Qibq0+hZhMw+jfbNaQaGYVBqOPz+d+qszlWIROOUimXljzrBCEeX
      Z+HoSYx2kXcuXGJ+JsSjJ9PYwRhgkjJGdIAvvbCgzvt3fvkkX3+pzh9/8zo9d78SLB87zXw6
      xOs/eYP+8ACzY1okY2Fq9SaZbJb+0KffKNOfcvixRz5C3PF56+13cG+DwGoYJm9cGvLiq2fp
      9oZgmPzHXztGJmHTbrfo9weK7lBrjNoiRiMOttEjFArxhedSzOVG7IFptJq3L5U5fSyN55t8
      +4db6pnPz8/T6XQolUoYhsHmbo/f+9YWpUqbf/TrZwEffHj6Mwv0GkVi2UV+6ec+z+lTXZLZ
      DP1uCc+wCaVO4dgW/V6Tx+eCvHvlKo2ewXo9yDOPL37ILIDn8fQzTxFOz+J1Ojz5zDO4/T5P
      PfVR4mGLUCrPmRNLGE6MF57/KMOhT6/nMZtLcubxp+m2hzzy6OMMzSBPP3aKcqnME8+/wMXX
      fsjsbBYrexS/XuKZ5z/JY8fCRJN5PNfFDsTBihIIxohlT+IOOkTTJ1nJBfj6dzd45rnnMfst
      Hn36Eyxko2xsF3js0TO8cWmbJ47nmFk+RSpksHDsUU4emWOIQ7s7YGVliU984hOEbZ/8yirN
      The/5/H8J56nWdkmlFnk+acfp983+MoXP8Erb13j9FKUzcLNq6V0GVXCmSxfwgAAFupJREFU
      jTrrVZsWV9YqrG33WNuqjzUW+/zzCzxyNI5j2/zZyzvUmh7PP57i1Gp838J3PR/PA9+D+dkI
      q4sx3rrUxrDjhMNh1RVcvr/ZHtAfjmqzR8P0Rh7+3PwsP/qLFylWmrzwzCzHloO4jXcxQzlM
      K4BpmHS7HUIhh0bxIrP5JfKzKfL5ORrN0IdMAfBZWDpCzDGIzC0TcPuEUjlaW+dwUgucPv0R
      fM9jc2ONgOkSzczTqLZ57BMvsBTuMPQdzECIcCTGsRMnWL98liPLC7zyk7f5zBd/Gq/f4ehC
      kv/jX/whm90FyqUm4WiSjYrD6mIWzzdwIvMEHRNvWOcbr/Y5e6XKTCrJ0nyWTrfD0HDY3tzi
      kSee4WOPn+DNc9s89dgS7tBl6MFu3+GJpSRXt+ucPrlEcXsdJ5ojaBkYsSSr2Qw/ee1lap0B
      zz7+GC++fI4nTi5QKhc4+87bHH/kNNevb9z2kwsEAkSjUWq1GuvbTTwzTq1WU500HMfmb/7C
      MVLv1WSffbdGsWbie30arT7zM2EC79EYen2XH79TYmOnRTIRIBkP8to7ZX73G1dpNkejVKdx
      jGS0ksxtBugODJ575imGrSLnN4dcv3yVJx+J4g07DLpV+v0WAXPA0IgQDkdplC4w7DfZLbYo
      F65+2BQABkYIx63y7vUiS/kMGxsbtJs1ei40O31Mt0NmbgHH8tkpNTn9yCobF9/BimcpbG3Q
      6vZxglFshly7coXgzBH88jqp+RUMt8sb71zl05/+FFfOn+faRo0f/GSTre0Sn346jeeZWJbD
      sFeg16nyw7eqbBWHpGJh3H6HC5evUixV6HY69LttfvLWRWZSFq4VpVLYIn/0DFG3xptXCjz5
      6CM0KjvEc0sMWyUKlTrNVovt6xs8+bFnaJS3qA0dnn3iBOfffgcXn0FghnB3m51K646enYwe
      MozRSKJYLMZwOHyvXblDMm5jWwb/6t9e453LHT76/OfI5hb5/g83KNZcnj4Tx3KivH62wnMf
      XWB5PkYqOeqr+t1XKpy/1iEcsBh4BvNzOcB4r2DJB8NUbSgTiQS9Xg/Xdem26ly9epVKvUlh
      e4P17SbzMyGW5xw8t483bDPoNxl2inTbBcq1LutbVXZ2tjm+aGH8yq/8iv/aa6/dwyX24ZFw
      OEy3N+DZpz7ChUtXx0YvWZbFcDjEcRzOLLf5W794At/3+d6rO8ykQ5y93OAbL27gmUl2d3dJ
      pVJqKFw6naZcLpNMJsfYtzOzcxR2dw66nJvK/MIC25ub3Isatkl/fpTlHWIaxohyjsVnPvUc
      333xJVL5VX7+q1+htPYqtmUSjM3yxCmDk0fmiSVStKrbnD97jq+/ajEYevidAX0nTNCtk47F
      GPguf/yn31GFLaZpkkwmVRFNvV7H8zwikchoRkHE5PTRIP/Rzx4jkwzyFz8uEHAMer0h6VSQ
      bCrE/EyEar33IQuC77G0Wi1M0+Qbf/pnDAYDHMdRjEb52XEcbC+C6/lYpsHGTod//C8v0e+P
      JprPzQXVkD7pRyQZUJmaIpz2u1n8AFub945fNK07t23rRDWXoR3l6aeeIBSb4fxbb+OEEtR2
      3iaWs9kq9zi+mKS2cx3DCDKXbvLcqSOc2xxSc5sMGbVGvPLWGySXVsZo2Z7nqc0iFouRSCTU
      QMNoNMrGdpW1TY8/f3mbXDrEdrHLVz+3zN/+5ZMqWdZqD/jV//vSXyrA3Yjv++zs7KhFrw/l
      7vf7ajBfrR1ga7fNUj7KXDao2rDL7DGZtrK8vKw6X4sVkMnohydxduvy0p9/m0gkRLf7DsGA
      Q68/wPddjAu7OPaQzfOv0mj7hII2tjlkJnOZP/2LHULhKN1um1arMyIibhYO/A6pUSmXy3ie
      RzgcptPpEAgE6PY81rdbmKbB809kVCfANy9U+K0/2qJYO+ST4t8P2TdHwLSIhEMMB316/b1M
      Z9gZ8NkX0rz0+oB3rzcYDoZY75lkkWQySavVYmu7yG9+3SAcNPn+awVcd3SMYRhUKhVisRjV
      apVisTh2Lb4/GiotFuJhE9/3aL3XILfd0Xn4Lr2ey9mrnrp/x3F48dURWzYYCtNsjuIUH+AG
      9cWpVIqdnR183ycQCKiWNYPBQCuy32OnfusHO/z2nxRGPDDjL7lAYzKaIlgiEompYC915CN8
      bMnhnQvX6FtRAl6beqvD556J8vM/fZJf/KsOb719ntevphj0bX7w5mWCboNSo0c+n+f111/H
      931++EaJYDCI64+mTOrztW5UbpjNZlVjqYdRCQ6SdrtNpzPi/sh0R9grtL8VcRyHRqPBcDgk
      n88Tj8fVkDxAJSplw/n2D3f4f/6kiGnuPccPzhO9B2IYBrFYDN839nZdwyASiWIHk5xczfDK
      m1f4yKkVfv6rjxKwXbIzj5JOJnn9wosM7ZM8/9FTVDsej0aCXD/3ppp7K+M+Ya/XqMwpFtHn
      Ecu0816vR6vVGvt7JBJRCvowiud5avFLv6F4PI7neeRyOZrN5i3VokciEZLJJJlMhmAwqIb0
      DQaj+ErO4bouf/DtDa5s72+F/5cKMCHB4HjNs+cOcX0fiwFGKMNCtkQqv0qjYZCfT1KpNnnx
      e1fomcsMWhXC+aOsJHqUKlUaXW9qj8rhcKjgQ5m56zgOgUCAwWBAKBSi1WqphS8iDaVkgrr4
      vDcb5nHYxDRNtQHMzc3h+z7NZhPHcdT93QpHSqbTt1otZVGazSbJZJJ4PE65PMrYh8PhqYsf
      +EsY9E7l2dM2/96XlvnvfvU1yrX9lIpoNEoul+PatYOL2XXYVO/DCQfPLdBdBBkDJYtFpqk/
      LCLxTbVaxfM8ksmkGrat35fIpFWQtoy1Wo1GozFWgRYIBJiZmWFzc5OFhYUD69n/0gLcgTQa
      DV4/B4Ohv2/xm6ZJNpvFdd0DmzuJuK77/7d3Zj2SXFUe/0dGREZGREbkFlWZVZW9eGmrjQ2N
      EIYRWDYSiJHmC/DCaN7maeYLzNO8zDeYhxGvCDTiAYFArMICzAyNMR5mbGOM3W7TrjX3JXKJ
      fR6yz63IqszucnWunfcn9UO3srMqI++595xzz/mfscwRMHkXj88yiEMGQ/FErVZDNpsdOxVW
      GVmWoaoqNE2DJEmo1Wrshhc4v+DPJgNIr8hxnLG4ikSMm80m9vb2Hhg7cQO4BKIo4s5fq7h3
      2D0nFkAXWhcN5B5G/FR4GKMgvolmswnDMGCa5kx+h3kShiH6/T5EUUQqlYIsy+xEiI+vCsPw
      nAvjOA573SRZxYtk0Fa7FndF0TQN+Xwevu+P1ayQitqsFj9wOe1RihXWAdd10Ww20Wg00Gw2
      2TQeVVWxs7MD0zSnxgP9fp/p/kx7Tg97DtwALkk6PUqVxrVsPs5ufVEuawDrItorSdJYuUe3
      28XW1hYKhQLq9TqrP5q0w8uyDFEUoevTZws/7DlwA7gkgiAgk8kwH5x2XfJrz84QoGZw4OKL
      +kE58Wk+fhRFLMO0LsSfh+u6qFarOD4+RhAEcF134mcll+n4+JipzsmSODYFFABLh06DG8Aj
      kEwmmSYOTUapVCrsCyEjyGazyOVysCxrTFH5LEEQsDKJKIqQy+VQLBaRTqfZ9ETSvX9QsGya
      5lpNryfJlEm4rstOgDijC66ABbutVhN/++IeblzPjL3W930Evjv1/XkQ/AgIgsCu4nO5HDRN
      Q7/fhyAI6HQ6MAwDsiyjXq/DcUYjmejLiTeSxN8v/kWRfn673YZpmixgrFQqU08G+j/rRCqV
      mqpBSpkyy7KQTCZh2zbL+riuy4LjMIxwbVdHEEbo2AG6PRfX93TcuplDf+Dhd297iKKIFRfS
      BsIN4BFRFIWlHT3PQ6lUQq/XQ6FQwHvvvQfLsjAcDlmGxrIseJ6Hdrt9TguTdn9JkhBFET78
      8EPcvXv3XNnxpKCQLtOy2exCPvcseZACdhiG6Ha7MAwDrmTi2es63r7XwVe/9Bm89vqbaDab
      6HQ6ox7ipIgXns/hn79+E0EYQRJHz+2N9wP84e0/IxBkFPIKmi0bsnxfNXohn/Axhup19vf3
      EUURDu+XHIuieH9nGu3UdP0/GAygqiry+TwzivhtMV3dUw58UtnxNEaSH+vl1fq+z4LdSRM6
      ZVlGPp9Hv99HSs/g2Rt5HLp1ZGUR1288h88YEl577Q188Usv48XPD2FH25D1Jgq56xAEEYFv
      40nRxUsv7+D9d/4CPZfEzU+VkU8Bdw9qPAaYBaR7GffvPc8by8bExwB5nsfcIkVRxt6HBnJf
      hnXJ/MQZ9fee1kDRH3qegiDAcZz7TS8BTvoRbu2ouFfpQhRcvPqnE3zllokvPOvhXiMBf5hA
      q2PA630E3+vB9TyIfg+//c1vUX7yGWyVryIxqGDgC8hmc/wEmAWCIKBcLqPRaMC2bZaF0HWd
      +fp0UxlfpFT3E7/FvCzruPgBsFqoafcnceOwq/v4r8oHuHplC62ui51yEf/w5SKeuXoVz93c
      wcBu4oNDG2++dReFv8lC8EMEgY9f/76Oz37hs/jf119HtqAjXdjDJ/YyEMKPuAHMClJIy2ZH
      I0Qdx0G/30cul4Pv+2PT56mRnAKynZ0dHB4enlsAce2haUPqaIFQF9m6oWkaBEFAr9cb+4wU
      D4VhyPL9w+YJBlGEWrOBJ65k8LWXtvDU1R6qjRq+/Z9v4KXP7eKdt07w9LUMnKGE3qCFV24f
      4/u/bALC6Ba5fa+Nv/+kg5eelxF4LjeAWUJiTuVyGfV6HdlslhW6xdWSgdOdzbZtDIdDWJaF
      k5OTsaI3OjHCMIQkSRPjAXqfh024X1UolTkqQz89xVKpFMvwKIqCp59+Gr7vw+nXkEmL+Jd/
      fB757Mh9LFoannsmj2bbwcuf24WYEPDf/1PFN39wAMeXmBQiAKSSIT5/axuhPypj4QYwBwRB
      gGVZODo6gmVZaLfbYwubFiupIMfjhXhpM00+pIaYRCIxVg8Trwpdp7z/Wbrd7rmSBXpmlmXh
      8PAQoijCcRy88EkL//pPn8ZZW+/1fVzdSUOWEnjl9jG+87Mq/DCJszmBvgNUGwNc2xsN0uZB
      8ByhHe1suYQgCMjn89A0Db7vwzTNc1Wh9P8vUlckCMLaja8iqNZnWgzjeR48z2Op5D+8Vce/
      f+vPcNzxmElJigjCCN//xUf49o9r8MPJ450SCRGHldPJDNwA5gj5tmdr9Ml16XQ6LMMxqVnj
      ooEtXbitI4lEApZljWWDphFFERzXxU9e3cePfnUw9vpqY4CMkYSZlhBhuiuYM0Lcunl6Uchd
      oDlTqVSwu7vLWvZI9oR2NBoOrWkatre3WXqUrvrjTFogDysGWwc0TYOqqnBddywtXCgUxlwj
      cgvDMMK3fvgh/nrk4IXnMxAQ4vp9l+bZJ01EwREE6fwA8yiK8HcvWtDU082CnwBzIooiNpkw
      kUjAtm2WHTo5OYEsy+zLptm6tVqNlfeeXfzxE0IQBFZbtLW1daFpjquMIAgwTXNi++ikAXyK
      oiBtZPHK7QP823/8H773i33sFkebQGlLR1qbvKwFQcBHx6cNNwPH5wYwL8IwhOM4LJtBtS7U
      uler1aCq6qiKUZbZaSCKIorFInsfulGmbEg2m0WpVIKmaVAUZe0XP3HRDBZpJlUqFZY8eP9e
      F8e1UZN9q+PA7k+PmyqN07KLP73f4i7QvCDXplgs4uDgAKIoQpblsZkC7XYbiUQCpmlCVVU0
      m03UajWUSqWxsl46+nO53Nr6+g+D6qniyYJ0Os3aSmkcK80LiJ+Qnheh2hjijbfr+PntBgRR
      mfgzAOCDAxe3/1hBEEb40atVbgDzhjIcZ3c4+qJ934dt26x+X1EUpNNpqKoKz/PYolBV9bFd
      /ACYlCSNWaW+3nQ6DUVR0Gq1mNIDyclQs8x2cRs//c0+3rwT3h+8N/3n+KGEb3z3BMD9gXwL
      +4QbBlU4qqo61pxC/j19gaIowjAMBEGAXC6HbDbLFkJc9WGWbZarSjKZhOu6bILkaLpkEq1W
      C67rYjgcsjbU8U1FwDt3HUgTAt9JxC/GuAHMCSqJpgud+J0AVXwCo6Oe5uOm02l4noeDg4Ox
      9CnFAI875Po1m02mnVStjuuCsjr++6Ufnufh8PAQpmnCMD7+TTg3gDkRhiGy2SyOjo6QTCbH
      Uphx/zVuCOl0Gvv7+0wqkBa9LMvQNG2xH2AJ6LoOx3GQyWRY1SyVkwRBAMMwWLNRJpOBKIo4
      OjpianmXgRvAnKACLgp46RQIw5B1JMVz3NeuXUOv1zsj6gqmhb9udf6XRZZlJhKcTqdx5coV
      qKrK+oMHgwEsy0Kz2WQJhVwud+kTkhvAnEgkEkzvhojn96kIjNThSN++XC6zlsdEIoFisbgx
      ix8YPTdqLbVtG+++++5YTRTVTKVSKdi2jUKh8EjuITeAOUG7/xNPPME0/13Xhe/7MIzRrWW/
      32fCTSSC6zgOix0Mw9ioxU+QrLyqqiiXy1AUhRXMUYtkt9uFruuPXATIDWBO9Pt9PPXUU4ii
      CJlMhjW1dzodKIrCpslnMhkEQYA7d+4AGKVFa7UaU5XYRCgAVhQFvV4Ptm2zmWSapmEwGCCX
      y8E0zUcuAecGMAdIfaBWq6FerzM/9ejoCL7vj72WisGoISSe91/XLq9HJZlMQpIkNBoNNBoN
      qKoKURRxcnLCjGBWdyLcAOYAyXtTrjqKIjbuaFKBG4m4uq7L5opt6uInSqUSPM+DoigTxQFm
      BTeAOdDr9aAoysTdfpJ8ou/7aDQaKJVKa9nVNQ8W1eK5eRHWnAnDEMPhENvb2+cGXDxoJ+v3
      +2sjaPs4wQ1gxvT7fSQSCfi+f658gTq3pmldxmvhOYuBu0AzhvTqp/nw1NdLSnKSJEHTtLUd
      hbrucAOYMSSYO03nh4Y+0DijTU11rgrcBZoxNK18UicTQacAX/zLh58AMySKItbWdzYDBIC5
      O77v88W/InADmDHZbHZq+o5q/yc1yHCWA3eBZkhcvGpSAwvVAnFWB24AM4SyO77vTzwFKAXK
      d//VgRvAjKE4gCo+4zxOKg6PCzwGmCGe551TgiZ0XV97AavHEW4AM8S2bXieB9M0Yds2+3fS
      8+GsHtwFmhHUqURjOS8ia8hZPtwAZoQgCKyGn3L9hOM4qFQqPAO0gnADmBGO4zAJFOpdJUjf
      hwfAqwc3gBlBOvaGYYzNvCVxp0KhwNOfKwg3gBlBzS6apqHb7Y5VhOq6vpHN7esA/1ZmRCqV
      YhddNAuAGuI3QdRqXeEGMCMSiQRkWUan04FlWawUgnpaOasJN4AZYhgGHMeBLMswTROapj0w
      /RlFEbrdLtO65ywefhE2Q0gOsVqtIggC6LqOfD6PwWAw8fU03ZHHCMuDP/UZIooiUyrTdR2u
      66LRaDywPVIQBL74lwh/8jOE8v3k/6uqygZgLPJ34FwcbgAzRtd1FAoFdLtd2LbN5Lw7nc5C
      hlwEQXBOjoUzHR4DzAEadNdutxEEAXZ3dwFgIQYgSRJ3qT4G3ADmBOmBAqezARZVCsEN4OLw
      J7UAuF++unAD4Gw03AA4Gw03AM5Gww2As9FwA+BsNNwAOBsNNwDORsMNYMXgdwaLhRvAisGb
      ZxYLN4AVYDgcLqROiHMeXgu0REgnKJVKLfk32Vy4ASyRuII0qcotajwoZwR/0kuG+oJ930c6
      nebiWQuGG8ASIO3Q4XCI4+NjFAoFAOBjk5YAN4AF43ke2u02DMNArVZDuVxGMpmE67p8dNIS
      4AawYGiKzPHxMba3t5luEA+ElwNPgy4IUoojt4cmRvIdf7lwA1ggnuehWq0CAFqtFqrVKr/5
      XTLSjRs3lv07bAz1eh2lUon9XZIk7O3t8VNgifw/ufujEwXBDMAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dead or Missing Men Women and Children per Migration Route' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Incident Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy92ZNk+Xkddu6W+77XXtM9G0DOAhggQIo0IZmyaUqyaEthO8KywmH7xQ+O
      0J+ACD44/O7wuywvEYqw5SAlkoYAEsQOENAAg1nA6bXWzKzc9+0ufsg+X/3yVmYt3VU9XTNz
      Ijq6qyvz5s3f/S3fcr7zaX/0R3/k3bt3D67r4uTkBIVCAbVaDbZtw7ZtAICmaTAMAxsbGwCA
      Xq+HTqcDTdOgaRrW19dB1Ot1jMdjhEIhTCYTAEA+n0cgEIAf5XIZ0+kUmqZha2sLmqbJ71zX
      Rb1eh+M4mE6nWFtbW3qN64Bt26hWq/J9X0RkMhnE4/GP+zZuNabTKSqVCjzPk/8z7927h5/9
      7GdwXRez2Qx7e3vo9/sYDofo9/vQdR2u60LTNKRSKViWhdFohF6vB03TYJomdnd34XkeNE1D
      r9dDMBgEAOzt7UHXdWxtbcG2bfT7fQwGA+zu7mI2m+H+/fvzmzBNpFIpjMdjJBIJaJp2ZkIa
      hoFisYhUKrWwUK4Dnufh5OQE9Xr9Wq97HQiFQphOpygUCshmszLOn+FqsG0be3t7GI/H8n+J
      RAImf9B1HcFgEIPBAK1WC7ZtwzAM5HI5NJtNOI6Dfr+P2WwGz/Og6zoAIBaLwbZtlMtlbG9v
      I5FIAACq1Spc14Wu6zBNE57nodFowPM8dLtdGIaxcHOcfP1+f+kXcBwHlUoFiURi4b3XBcuy
      rv2a14HJZIJSqYRQKIRut4tIJALTNC9+42cQOI6Dw8PDhcmfzWZRLBZxZiQjkQh2d3cxnU7h
      OA4sy0I4HMZkMkGlUoHrukgmk9A0DZ7nIZ1OwzAMFAqFhevEYjEYhoFAIABd1zEej+Xo0TQN
      sVgMwWBQzKTL4CZ2f95PPB5Hu93GaDS69us/CzRNg+u6CIVC6Pf7GI/HiMViH/dt3Rp4nodq
      tYrBYCD/F4lEUCwW5xaM/w2cYMFgEJ7nodVqodlswvM8xGIx5HI5mKZ5ZiKGQqGFn6PRKKLR
      qPycTCbF1ODpEQ6HYZomBoMB4vE4er3emS+g/n8kErmx49+yLOzu7uLevXsvlC/gui76/T4S
      iQTi8fhn5s9TQD0xdV1HJpORcTT7/f65dqXruggGgwiFQshmszJ5rwJeP5lMIp1Oy/9vbGzA
      cRyMx2MEAgGEw2G5Sf7bNE2Ew2E5MW5yAnieB8MwXqgFoOs6bNvGwcEBdnZ2XljzRz3dXyS4
      rotGowFgvklvbm6KjwoAZqfTwfHxMVKpFAzDgOu6CIfDEuHJ5XLPfBMcFF3X4XkeptMpAoGA
      RJd4UuTz+aXvX/X/1w1d12FZ1pXMspuEYRgIhUKwLOvGfJ9PMjzPw3A4hOu6AIBAILAw+QHM
      TaDhcIjpdIrZbIbZbIZSqbRwTDwNXNfFdDpFt9tFNpuVnfXRo0eYTqdIJpNypL9IR3sqlVrp
      iD9vaJqGSCQi4/ci40V5firG4zHK5TKAubldLBbPvEbsGdu25RirVCoLTsMyeJ4nsfpOp7MQ
      W7VtGw8ePECj0YDrujg8PITneRgMBmJedDodHB4eLky24XCIx48f4+HDhxiNRvKebrcL13XR
      arVkod4ENE17IaJB6XQaoVAImqah3++jVqt93Ld060DTh/MtEokszSMtGJTqJB6NRohEIufa
      /NPpFI1GA47jSNQHmE9u27bRbreh67qsPH+ERdM08cYHgwH29vbgeR4ymQxM08Th4SF6vR4M
      w8DW1haOj49lp8lmsygUCte+8wQCASSTSXQ6nWu97mU+17ZtBINBZLNZTKdT1Ot1pNNpRCKR
      53ovnwToug7DMCRkn8lklr+O/3BdF47jSGbXNE08ePAAk8lkYWEQ5XIZJycnSCaTCIfDslAY
      GqXdHg6HkU6nYds2TNNcWFCxWEz8gpOTE/mcbDaLwWCA4XAITdNg2zaazSZyuRw8z4PneajX
      6zdiq5umCcdxrv26F2E6nYrZWavVMBgMsLOzg2QyeWMZ8E8yOp2ORA+LxeLKk10H5pPWtm2E
      w2Gsr6+j3W6jWq2KqXF4eIjRaCQTkauq1+uh0WjITux5Hh48eADbtuUDVS98Op1C13UJmfKB
      e54npwMd8E6nI0m0QCCA0WiEWCwmodh0Oo3pdHojg5dMJiWh9zzR7XYRj8cRjUZlbD/D1cHT
      czabwbKsc/NHsgCCwSDW19dRq9UkCRYOh9FqtdDtdvH48WMAwGw2Q6vVWumURaNR7O3t4fj4
      GMA8k9ntdjEcDmVS5XI5vP7665LQabfbsvubpim0CYILNBAIYHt7G+FwGP1+X06t64TneZhM
      JhgOh9d63cvAdV00m80X3uF90TEajWReRKPRc814+U0+n4frurBtW8KBtPGB+cN5+PAh6vU6
      er3egl3KFLOmaSgUCpL0AuYTynEcGIYhsX3G2/3vB+ZUiFAotGDuAPNEFUO2rVYLs9kMR0dH
      4mBfFzRNk9Dj845s8OS0bRtra2vX+r0+TVDD7qlU6tzX6o7jIBqNIplMotFoyJsdxxEPmg4F
      TaLRaIRQKCSTWDVFSIsolUoATndvXjcUCiGZTC7chH8Xn06n6PV68DxPQrOM6Q6HwwVnejgc
      Ls0gPwtGo9FK3+cmwJwIMP8+5XIZnU4H2Wz2hQwvvsjo9Xpot9uykV10murkmQCQieY4jtAd
      OPnVY8RxHKFDA6dRHxUM5ZmmiVgshkAgIBPVH8ZUr00TxM93mU6nEhplAg2Yn0xMdjiOcy2T
      djabIRaLIZ/Pn0mc3AQ8z1ugeRiGgfF4/MIk5G4TNE2TYA6AC8fQePvtt79OdmYymYRlWchm
      sxiNRpjNZhJK8k/wwWAgGTbP85BIJBY8bS6eYDCItbU14bQMBgNMp1PEYjG5ydlsJn4Hbzoe
      jy8Nm9Jp1nVd/j0ejyVerppaTwtmYOkDMVJ1U3BdVxZBMBiEYRhiNgaDwaein3xaQeqMbduy
      KZ6XaNX9YbbpdIqDgwNxAm3bXupoqhfkRPcjlUoJlaLdbkvCbDAYLFwzk8lgZ2cHd+/eFe4L
      /QLDMBb+MDLkOI5cg1Ekx3Ewm82emcvDaJNhGNjc3DxD9LtukPE5Ho+RTqdRKBRgmiYajcZT
      O+PcnD5O0Ifjc7rJJCbB+hXG/Wk5rHy9+oPruuh2uzKBDMNYGj/lh6hotVoLP/vJUXzIPE1U
      v8HzPBweHuLw8FB2eTUKRDOM/+a9LdsZG42G2PDPMglGoxFGoxGCwSByudyN7sLhcBiZTAa6
      rsNxHPEJnsX+/7h9B26cDOdOJhO0223J7N/kicrITzgcRiAQQK1WW0lvWcgEm6aJO3fuSLye
      D6Lf76PZbIqt7Z9Ymqah1WphOBxiY2NjqeMRCAQk+qNpGo6Pj/Hyyy+LqZTL5XBwcLBgbvDf
      NAeYQyBNY9kE52LyPA/5fP6piXTMX3Q6nRsn44XDYXS7XaTTacTjcei6jmw2C+DpC3U+7gUw
      GAwwHo8xGo2Qz+clvM7CnkQigVKpdGMbSzAYRLFYhOM4C/OERVqE8dZbb32dhCEAMuFZB8Dq
      sMFgsLDrcnIyu0vno91uL2Xd9ft9jEYjmfCBQACWZYn5xZ02m82i1+tJPoA3HQ6H4bouAoEA
      CoUChsPhSlOH9nQ6nZZd/CpwHAeNRgOZTEZi87yPm8BsNkM2m4XjOFInHY1GEQwGb00WmGWz
      nAPD4VDquWezGcbjsYQko9EoQqGQ8J1uErQeDMPAdDpFuVxeyA2YfvvecRxJYhGj0Uh2ddYB
      A1i608fjcQyHQ4ni0NyJx+NiXjFE5Y/0cFHduXNHThvSk+PxuIQmQ6EQ4vH4QpWZH8PhEEdH
      R0+V1eWC73Q62NnZQTweR7/fv7GaYdu2UavVxFZutVro9/u4e/fujXzedYPUlEAgIFn70Wgk
      pbAAsLu7K2IJnU4HsVgMpmmi2WxKHfhNg1nhwWAAy7LmYdJcLvf1arUqOw2dTNpMtEVpuqjg
      7s+dMZVKIZVKLUy4Wq2GVqslhe+xWAyO42A0GmE6nUoWmuDnHRwcoNvtYjweI5lMSliWlWok
      6lFVYllRj+d5SKVSV3ZiOQaTyQSGYSAWi0k56E1BXciRSOSFLn5R4bouOp0OOp2OCCnQ7ODu
      m8/nRWhhOByiVCrBsizx1y4Trz8PZDJfZE5x/vCU6vV6MO7evfv1999/H4PBAJqmSWVWJpMR
      OZPJZLJ0ha6vryMSiUiRy3g8xmw2E/mO8XiMVqslRyGdyXq9LvF+tWZYPe77/T6m06nIs8Tj
      cTnGGN5KJBJgRZtKxiOYg7As60q2JgcqnU4jFovJw1RDtTeFRCKBzc3NWzH5GdBot9sA5n7e
      1taWkBm5ACKRCIbDITzPQzQaRTwex/7+vjxLLgy+56p+T7VaxXQ6FR7ZRbAsS/xIU00YNJtN
      oR9zwvp3T13XkU6nkUwmYdu2ODmMvXM3JxGJNF+aQqQ7t9tt2LaN2WyGbreLbreLnZ0dWJYF
      x3HE2eVCUR1jnkadTgdra2uoVCqySBlD572oNO2rgOPCbHS9Xr/RUkld15FMJm/UMbxOtNtt
      zGYzhEIhuV/LsmRybWxsYDabLUS1gPnpVqvVxBdkqJRzZDQaiQbSZSaz53kIh8ML5bKMPqk0
      CKqasLxXaoLVi1EbaDKZiAzJ7u4uSqWS2HPhcBie56FSqWA2m0m8VVWKACC7+draGtrtNoLB
      oJgvzAfQ3GF4dDKZiM2vFoGobD51MieTSQwGAxQKBZTLZZmgXACj0Qj1eh2ZTOapoinq7nZd
      O79admlZFjzPQy6XQzwevzUOr+d5og9FqZZcLodgMIhKpSKbDtkCPKW5cU0mE1k0nDMMqHie
      J3Uky9QvJpOJlNRy0qsTnaY780jkjRmGgdFoBMuycHJyIs/TpL3LmwEgURpOblWRjN4+6ciN
      RgOmaUqo0B9xYQw2lUohHA7LcccvTXpEMBhENBrFcDg8k75WdxneJ7VeEokEwuEwNjc3sb+/
      LycBY+r1eh2apsn9XcXZYnKKGknXcQK4rot4PI5wOIxkMnlh0dGLBuZXotGomKixWAzHx8cy
      j1qtFgaDARKJxJnAwXA4RDqdlrwRw+pqvgiAWAiJROIMVabT6YhQGn9HbSmZ2KaJWq0m82E2
      m0m4XoXJ0KZqR/OmbNuWnYoT03VdZLNZzGYz1Go1CVeWy2Up3uZuzuumUikRxGo2m1IvzFOA
      Didj/pVKZeEmyT5Vk0OkVHA3YI5AZaYStVoN3W5XnPTL2Nf+k4oszWdFIpFANpu9FTb+MnCD
      4+lYLBZxdHQkGxrHnbkkAAuWQb/fF7oKN0Jg0Xfje6iDRCkeQtd1xONx+czRaLRAqef98Trn
      wVR3S3Ulep4n8W/+zN+dnJzMZeV8D3E2m4n6m5owM00ToVBIPHCV5kwbG5jXIkejUVmMzC/0
      ej2k0+mF0yUYDCIcDiMcDouqRCqVQq/XW2CyEpPJBNVqFYZhXEphwXEcDIdDmKZ5rVIpNCdv
      O3q9nvhys9lsqWRNIBCAaZpi4qq7vDpZ1YWimpr8eTKZyJiRKEnzqNfrodvtPvX30DVNEzq0
      GrclCY4ngXpj6u69Cup1NE3DcDhEtVoFALHJ/Gi1WiiXyzLpOABklaoIBoPY3NxcCLky9nye
      LX18fCzVbecOzBNnm87ZdfgAjH3fdrBIiv7bKsIeQ9QE7fxAICAntf+9y66j1osEg0G0Wi1h
      Bj9raFrPZDJi6zPjqia9uGP7J6xfCYLmC3d3wzAW8gTcBdTrLgOPR7UwZ21t7cIdm5Vn8Xgc
      u7u7CwJcPEmIvb09PHz48PyBeULw4yD7r/E0uIrUjHpKvkig38eI22w2Wzk2jM+rk5RUZX4/
      7ujcgJdNaJ7wTIIahoF2u41yuSwizSphEjjNJ9HCWXWPJgDRnozFYhgMBrKT8kRYtlsu+z/V
      7FEpE/7Jfp5Joeu6iMFGo9FLKSKMx2NRk+Z1qfUZj8eRTCYlVszBuQy/h1wWdWCvglgshuFw
      iEAggFKptCAVeRFc10WtVlvwF8iJYslmMpl8ruWTZPJaloVCoYBut3vuabvs2buui9FoJBlj
      TZsrgmQyGdGgnU6n4hMmEgmEQiGR7Ge0kfOME1w13fk3x03dlLlRc2MWH4BHEb1lXpxvugh0
      ZlX+jvq3Oogq21TTNFGg5hdnlRpff9Guydg/bf+HDx/KiROPx6VW4dGjR/A8D4FA4FL0CNYe
      L/MpLotQKIStra0rmz4s6u50OshkMuh2u2i1WuKM8yFyQjwvcAEwr7PqswOBgNR90Fwi+v0+
      crmcmDbMs+TzeeEIAadzhTQRakP54Z8jyzYF1b9VF4zJwWy1WtA0DdPpVCQSudIuG6a77EIh
      uDv0ej1sb29jf38fpVJJ+CHn7f70I3iPlmVJYY06WVutFuLxuBDL2K/gMjtnJpORwh8m7S6D
      QqGAaDQqu+NVJz/9HjYZqdVqQv5TBcxIVLwO+crL3tdsNpNAxbLJz40wnU6LScONjYhEIhIl
      VE8I/zzTNE0CMdyol5lI6n2o5pUa2aQ5xP+XAA2zb+PxWHaVyzgXfr6//9/q/6lHlvpF+bvJ
      ZIJHjx7JSdRqtVCtVhEMBpeWJZKwxxCtavpsbGyg0WhIQoQ1xLFYDDs7O2g2m5dOihmGgUwm
      I0oNl1kApDQ/SxENI1XT6VQoIVyEHEcW7d+UNIwfJLxpmoZwOLy0yISTNB6Py6JnTkldAJTF
      p4Wh+oicDwyEqFQcf66A118271zXXfAH1BLahQjUZDJBv99fSB5dxrPmA1Evxni5Kp/OaIoq
      ikX/wk+vDgaD4ncwb3BwcHCmmGE0GoksiloLzM/0l0Tu7+/j8PAQpmku1Yc8DwyzXrbMcjqd
      XksdMZ8D6QT+50Jn0t+X4aag1ihHIpGlmwGfm/r9B4PBGdGCfr+/MJ6cxDSJWH/iZ/tyjgKn
      lYLnnULLfkdfgH9MDjDfSKhhSL9p4y+KWXbcqCFV9XUq/4P/p3ajUT12+iX1eh3RaFTuLxqN
      Ym1tDbquS+Kt0+mgVqsJlVs9Lvn7Zdymi8BNgTTui8y8qzi650HdJFQeFMeORfvPI6zqOA5O
      Tk6kRnlViazK7+H7lsXoybKlZcDdmjUn6XRafB4+Q77+WbPm/hPjzNXUbLD6s//LcqLytcsW
      inps8UssO7JefvllvPrqq4hEIqIw4bouIpEINjY2YJomHj9+fKaOOJVKyQmTTqdRKpUWnGw/
      l+RplNY48Iw7XwQ1iPCsIHGQO6ppmohEIigUCs+lVpmLrdVqyaJjpxo/+J2ZZJxOp6jVakur
      B1XmLt9H/6LZbApVnvPnOiNd/vlsql+Uji93z1WRDzU6pJ4GjLCk02k0m82F9y9bCCxeVtmC
      JIVVKhWUSiVomibMQg4ESU3qMadp8wYc/X5fssGsCjs6Ojr3+1yEUCh06YSLmn94VjBJGQ6H
      xZGMRCLPTcF6Mpmg1WpJbW04HF5aFMQ5k0ql5ITodDorcz10jGOx2IJ5xHlIYWK1FvymINKI
      ahKLK8//BSKRiCQs+D5/PJYP6LzJxp00Eomc4XCT07O9vS0OEWURCfoKy3Zaqikzduw4Dra2
      tpBMJi9UCVsF6nVeBMasrxscE8rWPA8Mh0MpZu/1euc625qmLVBV+L5l4LNvNpviF9JHJJ1C
      ZY7eNHR+Af5N0yafz4vdzRqAbDY7Tx48mXzLwk+0xc8DM3pra2tLJwxPmNFohIODgzMLkfwg
      LjIuYGDutG5sbGBjYwPBYBDlchmO44ji9VMN0pPxOM/+TKVS2NjYeK4x+ZtCv9+XhoEX+T80
      jbhBqZbEMmiaJpQQWhGcS2roeNln+RkF14Ez/QF442T6kQ4cj8dRqVRkoqkRHf8NzmazlTs0
      AClsv/DmTBPb29syKM1mE/F4HNPpFNVqVUJy/MytrS1YliUe/u7uLtrtNur1OkKh0DPp7IfD
      YaRSqQWCoAqV4/6iYDAYXLnckDImjPCpm+OqiaeOKwMgy8wfbiQsM1UdZBImx+Pxubv/ZRKj
      V4GYQDyG/M5MNBpFIpEQuXQ/t4I3q54IaiRg2Re4bL8rVTUCmA+0qpbmeZ6E51gf4G+unc1m
      cffuXaF0PwvOo1K/iDt/NBq9sg1NZ1+NPKlUEP+JvWyyrqJHqHpH9BcJhnrP6wSqVgNeF3RO
      Zk5oz/MWWpyORiOUy2XZ4dTYP1ejqtrGfy/LEwCnPXmfBiyM4SKkDcnPmM1mYq/6P5f+ybMg
      FAphfX19ocEf8XH0E7huqBNfTWTxew6HwzP5kGUCZX7Ku3p9UiRo8jBoQB2m510VZ/r5PiQr
      ARBagcqGVB86HWWeHCptYhXh7TomCj9nGdOQlUlbW1vysK5rx6D9urm5KTFuFmLcpjZG7Nbj
      BzdATdPkNerzZhmkCj/XH4Ak7/xxe5rIrVZLooWUUqGT/TybgnieN/cB/Glm13Wlal7d5dXX
      LlOIU7kdqnmkQk1oPS3IKWeF2jInXk3iMXLCvmfPAvodwCmnhd11bgtWLQAAUpa6bAdfxguj
      mBf7OVDgrFwuC8vYMObCy9y0yJJlzkbVnVILs56HWWlyIvvrLjVNw/b2Nnq9nhSksEKKqfCD
      g4OF1c+Jt+yaxHUmidRr+mPG/klp2zaq1epTMTNXQdd17OzsLBRs3AacF6pVe0LwZOdYJxKJ
      hXJVNeLT6/VEzpGUdlKS1U1KtSra7TbG4/FCYgxYrBe5yXCo67pnM8Hql2P3x3Q6Ddd1JdRn
      GAbW19cX+PrqLqzyNFQf47rAWmUAC9Vj3FFU5WiCOzU1ia4L1+FbPC9c5nsz6aU6voFAQJT5
      QqEQ0un0QuiZGk0q+EyazSYqlQqq1arwt6j6x7phzh1eU03IPkvPh4tCpoZhwFwWVuJRRV4N
      TZ1cLiclheoRpWrxEGpGWWXiMcqgZn+vimq1ujTUpnJRmC2ORqOwbVtCbp1O59KJrU8KVHPm
      ojGniDE3LBYUGYYhBTqUimHkcJnsDKnp9Bmo039ycrKUCgEsRg+z2azIqpx3z6oZ7n+tmthd
      tQEbr7322tePjo7OXFSdTLwwjy/utjRz/IXM6s34/1ABjCrITwPy5FctAN4TF1uv11vwF+jM
      ftKhtrTipnGZKAtrK5j5B+Zs0F6vh9FoJPQFXdcXuEqE67ro9XoL7XNVzSc/9cafUHVdVxT5
      ZrOZ7OT++aL6oSpdXI1SqtddtpB0/3+qk9/v/PKiqk3nn4SlUmlhkP0rnBGn85oWXARVs2gV
      uDst0xnq9Xor9eI/SeBm0Ov1EAwGRUrkPGiahkgkgrW1tYVebmq0xh8d8jxPgib8XNI2WO9L
      k1n1EdVJ6eeV1et1DIdDkaNcNk+5OfO9aiTTz1ZexeWSRJg6AH7G5qpV6gfNGoa0PM87wxvn
      IiD777IsSz9WKRH4aw/8v+M9PK9Cko8TLB5nbfOjR4/OaC6dB/pUpLZQB1aFKhxA9Ho9oaB0
      u11p/M3uPcvMsVWTmFYIKRkq8ZJlmapZTRq5ilVESM/zzkaBlh016s/q5PenxzVNW9jZVfvf
      f73BYCCSecFgEJFI5Mp2uSqvwc9fdtSpPggHmbW2n3RQjhyAJDkvC9bq8vmThKie+tSApUmp
      ngblclneSwc4mUxKh5jL+oDqHFItFDX4wUmu5of8Jjz/j/PAtu25E8xdepn97oc/PqwWnui6
      Lg6S/8aXXYefpaoAXGSbD4fDhaiL+vm8rv++/T4LTbur1DvfVqjSNDSDLovRaCTZX7Vp32Aw
      ENavv58y6SeUS6E4MlU5SqWS+AjEspyS+jt/Mg04jRjRHKNPGAgExGRS5yUZygztMrq0kAnm
      G7mSloUv1aok/2J4GrteHbxOpyMy18u6h3ieJ7F91jDz3i9j2/pVK05OTlAoFD7Ri4Ax+Uql
      gul0iuPjY5RKpUtxhDguiURCaqvZvXPV6em6rrRDIgzDwPb2trB7U6kUSqUSOp3O0n7M3Ky4
      4FTzyHEcyR14nrfwOZzYDNT4Azl+Ewt44gP4eR/+ai+/Z83fPevEWZYnGI1GaDQaaDQa0qLJ
      bzOyZpTwc5nUgTwPo9EIJycnn0h/YDAYiMaO6vvMZrMFh/U8pNNppFIp2LYtGd1QKIRisbhy
      bHVdR7FYlKQYcGoJ8BSoVqtS5roqzr/qVODEZpJN3ST9cX/V2eZ9qCeD53nQuXtSblotVqd5
      pOr7q4kKHk9PKxylOk9+OsZkMpEjWB2IWq0mKsD8sn7/xbIslEolOS34Hcku5fczTVP0TJvN
      5rUmyD5uJJNJzGYzibtvbm6K+TMYDC5VHUdbn3Ln8Xhc6rc5CUejEWq1mvgC3LRUJmomk8HR
      0dHCJsWwNJuzA6eltfx7MplIAtO/UPzzTa0y9IPvsyxrIbTquk+EsdQ4q5pR9RfMa5omCQ9O
      Vn/YlO/lovLnCZbd3EW6m+oqJ/9GJVvRjON15MspimrhcBj5fH5hUnDguBBs235uFVc3hfF4
      LAmkVCqF9fV1APNNIhaLSSujRqOBQqFwriPqeXO6Obs6UjB4e3sbw+EQvV5P5k6/3xd/wLIs
      1Ot1bG1tAYA0Xecc45yYTCbI5XILfiOfHScyS2FJrvTnBNR56N/AOLfVkD2DJnfv3p3PEV6I
      dpN/Avjta9pmnOyqjaVSosnFSafTaDQa18aXoW+gxo/VI85155r+lUpFGmto2lxy4+jo6MwD
      D4fDUvTTaDSkhc9tBuVEqMWfTCbltOVOSnXnZc+bHR5VEWHmTXRdl35fqs4nfUfgNAE3HA5R
      q9WWJqR0fd4WK5vNis6QmiNQ74dzk3/zPvwbrv97EOocp9USCoVw//79uQnEF5Gf4XnewiRX
      b17N4vE4oU4/XxuNRrGzsyM3+7RcGQ4Ur+8fQC5ANT6sfmkOql9DRv3brxR9XZ1gPi6wBRDB
      Z9LtdhfCkjRf1CIhz5t3/qF4WK/XW5gLHDdGli7i6qib5bKYfyaTkcwyzaJV6uhqpPgAACAA
      SURBVCJ8Llxss9lM/lxkuvJ04MIkrTsSiZzWBPvjqergqTfCFafaa/4PYsSApLVlVT6cxOrn
      A6crmwPseZ70HgZOu9erWWq/OgR/XrYwVKjRBj7My8ofvqhg0guYbzykKahBDT7XarUqOQLg
      bNhz1cTq9XpiEq2CYcyb49EUVdmlfEbAPMK0vr5+rpqGP9GmJsYuA5rzNIei0Si63S46nc48
      EcaJxiTHeZ75sn/zprhTB4NB9Pt9xONxtFotZLNZRKPRhdarqm+gOi9+Z5hftlarIZ/Pw3Gc
      Bc0YFep11ATIMj9EnRCUhDRN89abP9QVVbVV6d/4YVmWqGTTdIxGoygUCnj8+PFSqgIjSWoR
      1ar7YAh2Op1KAIJWg2ma6Ha7ogG0vb39zEGIzc1N0SSir8N74bwwTRPZbFa0cE11F+YX5URS
      w5xcsZeRO+Fqs20bwWAQzWYTqVRKFoDf8VUXE2P7/qSc68770bKd63mfr/5enfzqddVdhdVJ
      wNxUuGnBqZuE2j2FsCxLImJ0OHnSMpk0HA5FnY+nt18FjqdHJpNBIpFAs9lcKX8CzH0ACviq
      /iU1hrrdrpy47XYbW1tbUmNyFYTDYZRKJfE3XHdO3c/n86jVaiIeHAgEcHR0hOPjYxQKhXl9
      CyejP9vmDzP5nd9VUM0pdognqWkVzkuLq/dFR1pNxl10H8CiieTPa1iWhUwmI3Tf28LtvwrG
      4zGazSaSySSKxeJCDQXDmIVCQTrUr6+vnwkpatpc+yeRSGAwGGB/fx/ZbFYaXi8jF6rOMbO1
      AERrSN1M2Ttuc3MTk8kE7Xb7wvxMKBRCKpVCJBLB8fHxwmKt1+tYW1tDJpMRFiu1YV3XRb/f
      n59Eqq29TIeS4UX1CFwWclLBFc9J5TiOCCGtmuzFYlGIW+pr/K9lpIevWZYLUBeHaZrI5XLy
      wJkOZ7ZbDZFdVx+wFw2maUo4VMVkMkGn08FoNMLR0RF2d3cXdmr/Mw6Hw9KeCJj7DIlEQrpe
      NptNmYQsoGFwRI3grPLLpHu7Me8AyfmzLHFnGPMO9Ko/6ke5XF742XEc+Kn/ZiAQEGdlWSaV
      3AoAC57/RQuBpXD8siRMjcdjUaP2f3nVhOFnLKNDqMc34fcbgPmRR/1Qld7BngHqtdkHgGaW
      ZVkL/YlvM/zsyHq9Dsuy0G63F/Ile3t7iEajyGQy0t9Zpbc0m02hVQSDQUynU/R6Pej6XBJ9
      e3tb7O1gMIhHjx6dYRFcBPqgBwcH0nn+wYMHC69R2QPLpBqvNDZq1Mdff8ldXPW61RNDfa3K
      2VYjRQQlSxKJBGKxGBzHEfVfz5tzfJjk6na7ZyTPgcXU9rKJqQ52MBhENpuVmDUXTqFQOCOR
      yLg4/00f5rqkzl8E9Pt9Cf2x7wBw9oQdDAYYDAbSx1hdAI4z77a+u7srya1EIoFarSbNDVk+
      y8w7Nyq2vPKHXs/DqkpDNYL4rDDJyfczJdUdllm7ZfwLghPvvPCZWlBB9QBN06TYAjiNMfd6
      PYzH46WMTV7fL9DLwWGoi10pAZyr8c+kjp/2fVs6t18Gtm2j0+mIExwKhVaGMXVdl4XC6jvP
      m1Ops9msNDPxPE8afReLRYnW6bqOl156SawEbpyuO28SzkTleaBv5neyVT6Prs8lO/09gq8C
      UYdWzRV1EXBAzrPf+R6+VuV2LHsNM3ez2QzZbBaO42AwGAiPh+YJnSDV5CJo56unEf8dCARg
      WZb4FZPJBIPBQAom/AiHw5K2Z/pf0+YF3Sqp6zYjmUwimUyi0Wig0+ngzTffFJudJZCeN6/N
      aDQaSKVS6Ha7SKfTSKfTUrtBGx2AmMdsgsFONoVCAQcHB9IgEJirQRSLRRwfH2N7e3slb4fY
      3t6WBueE/+Qvl8uIRCLIZrMLdQvnXdcPc5k5wdWlTmY6RuclivjBHCB/pIY/cwWzRI5eOhXp
      mEMIhUIYDAZLIz5qlIqDSelGLi6GXzmhuRtxcZPA5d/5eVJcZSBfdPAZJ5NJ9Ho9iZrwZGTN
      LttSPX78GADEJ6CZbFmWlDsmEglp5gechlaDwaBMXJ74uq7j5OREcjmlUklMU3KXPM8Tp5qm
      63kgN2ltbQ3NZlPEiT3PW+gK6odqLZj+yeUPf67KBvMLnxeO9CeguPOTL8QvyQVHsycQCIjD
      RZvUdedyGmpeQL0X+hxMZqlVR7xH9hEmrbfX6yEej5/hw3CyfBKVI8iUPTw8XCpraBgGSqWS
      NBLkZKLDzJ4LvV5PyI4UvAXm2ef9/X05kVXyGnsCDAYDOI4j5EReLxwOy+bDtqgq1A2UcJx5
      95r19fWFuWua5pkFQF9WLaQxVTYnV7A/Zu4fIP4fB492/0WOCa+nVmOpvQaYpQPmzhhbZ1qW
      JSFZteUmFxd3GPY6Vp0nmkNUROCCa7VaEh79tCEYDC7UfXAjYzix0WgIhVkNOZumiVQqNY+/
      JxL4UnET/+a9d4Qq/ejRI2HejkajhToPNVRpmqZMdNM00e/30Wg0ForwV4kWqIlS0zQXJOlp
      vna7XTmBqEoXDofFMjg5OTnN/gOnNr+6Yv38C0Ll4DDaozqjl4F6KqhOMzlD3W5XakgTiQRM
      00Sv15OFQFAdgiQqhjvZIQaAHI3tdhvdbhfBYFD6Bn8SQpxPA5ol3IT4DFUFEO6+Kj2GG9Z0
      OkWv08VBYp7dNwxDNppyuYw7d+4gFouhXC6fmUv37t1DqVRaoNXHYjGkUikxrVx3LovCjLQ6
      X9Tn7w9lc3KrVBkuNCqH84Tr9XrzRBjfTFOBu7QaAVFJY8ug/s6fPVwFv28wm82kSKLdbkPX
      dSl6Z28C13XFSQ4Gg4jFYjg4OJCIlbowmQMgN6TdbiMWi30iVJyfFdzRGbNXT3JO/mg0KkrY
      3FFZnqhpGgKhIH764fuIRqP4ytZLaEzHmE6nGA6HODo6wiuvvLJAzEskEgs+ggpN04STBJwm
      uYbDIfr9vhTGqMEVwzDO6Eup0UHg1CcZDocLvduOj4+xs7ODer0+d4LVN6uRGpWMtsq8UV9z
      lVCUWqjAXUJ1Pvlw6KgyJr+7uyuJquPj4zN5Acr0+fkwpVLp2mLHLzoYAJjNZgu11TR92IpI
      NUW5qfA0dRxHJipJjaPRCI8fP8b6+jqCwaCYLHXPRiKVQqDXEUW34XAoPpthGDg5OYFpmgsT
      /SJEIhHEYjG5p9FohHa7LXPNL4NPdRF/5lj1WRm5KpfLKBQKOBMTVE0cVSh12eTha5dNftVu
      pPPr7x3GyeuPR6sVWky0FAoFGQzGkP1JOUZ5lpHZPi2TH4Bo5RiGITke7oTA3HQkj4fMXW4+
      /lzJYDCQJin0vxhS5sKKhCOI23Ml6NlsJvqxtCZokvDzrgLu9tVqFZFIBDs7O9D1ufoIM9Xq
      ZpfNZhEKhSS3IydWIIDXX38dzWZTGjienJzMo0B+8IvR5uZuvMwEUslvALCzs7OQXqfNOJ1O
      EQgEcP/+fXmv/+TgQ2NncM/zxCn2vHmn8vF4fMYX4O/VvMCnGYlEAolEApPJBLPZTEyYQCAg
      k4M9eZl70XV96eQcDocSCtU0TXwpRoQikQgeHh/C8+Z6QGwjxVoEJlHX19cXuGQET3vOg2XJ
      SjrZk8kE+/v7MAwDGxsbwk1KJBILgRm20GWUkSbV3t4eAoEANjY2sLe3BwBnTwAVdHL9XRqX
      vY5/M55PeRMSpoLB4IKm5LJJSjKUeiLs7+8LXZdOmD+8Su5JNBqVwv5PMxzHwePHjxGNRlEs
      FhGLxXD37l05kdkEr16vIxKJSFBgGVSfKZVKIRwOo9PpiJmTyWQknzMej4XrbxiG/D8jcA8f
      PpRm6NxMSZemnxkIBM6ojnNjzGQywkidTCbynI+Pj1EsFmXjZvhzPB6Lml29Xke32xXB5K2t
      LbTb7dN6gPMG8yoRk5OTE2l25pfBU3MAhP8U8JtDw+FQdiguHF6Xf4LBINLp9K0vaL8u0GeL
      RCLo9XqIRCILNjlDwfF4/Fx1vMlkguPjY2xubsocCIVCoqzR6/WEt8WFQs5Xu90WugswryLj
      5O/3+3AcR6jJ0+kUkUgEo9FIer6pPDHOHXUnT6VSODw8lODHeDyW04O5Add1RQ6fyTrP83By
      cgLP8+bUcGB1B0DaTqvIZ8tev7a2JqrA/Js2YLlcXtplUXVS1CSXmqNQqdpcNEQwGPxs8itg
      p8VIJIK9vT3ZKDhZqJ+5trYG4JQK7jeBeOL6T1Rd15HL5URKh9YBw4u0ArLZ7EKiklVYPMFt
      20YymcRrr70GAGImTyYTHB0dialFMIH165/7HIbjiZh1nU5n4d5ZNsvPU31VlQnQ7XZhXlQE
      7i+UWbYYVJOk1+vJ7wOBAFqtlkQX6BAvq+FVb15d9WqyhvdAUJ7vtpcxXjcY9lNVEIDFULef
      SrJsA9E0DdlsduXmFwwGMRwOZfLRXKYfx1JITdOQSCRE5IwnfrvdRiQSEc4Pm3PEYjEJhftp
      9V/IFPG3Wg4aL23jzx0HtWbjjLqfpmlIJpNC+1bJnZ7nCcFuNBrBvEoRiJ8CsQzdbhetVgsA
      xNFQd3A1A6mGXJd9lp+Up/7NE4a7wmc4RSqVEnLhso3G72yuOuGX7f7cyGiK+vMqlE40DEOy
      7bQCuBHyHliYTpATRKhJWc65jKbDqJSRL+Ux7HbRaDTkJFPB78QG6bPZDJVKZaEwx/OeaIOy
      yPkiM0dNOKhmk/o+9d/+BIU60JzETLzwd+r7Va6KX4OGmcvPdv+zcF13gcbMsWNoMp1OX7pZ
      oRpd8by5AFan04FlWcKg9YM+oCq8FQwGFxaAej8qiVLN5/BZs5bAsiz8eNBG/607+P77f42T
      zpzazSZ9as7DNE3cvXtXfAFWxTGkKnXid+/e/fqjR49klZ03KOf5Aurk9FMrOICE+kUZu/cn
      ZtR7WUWx4CnwGRZhGPNO7LSnLdNE/ElykF1fVCKjbdsYDAZS5MIITzQaxfHxMfr9PqLRqDjW
      jOqt8rv47P2RQ5o4bF9FlimjeIlEAv/xF76MrfUNjHEaZg2Hw4jH46jVahhPpzCDIbyZzOBw
      2MP0CY17MBgIxWM0GmE0GqHVaklXIzJHs8kk1kprcLwn6hRcNX7b/KpQfQl1sqsEO3WR8Wd1
      R1Dhz1CrmWPasJ/EAvbrgDqWr965i9+78yr++MN34XmA57lwn5wKDDv7wQ2HxSt+68AwjHM3
      nmWmExEOh6U+maQ4mrE7Ozv4B8U7aCXC+P9+9H2R5tzc3MS9e/dEcfBNK4I3HlXR3bmLb37w
      rlz719e34Hke/vrBR5Ip5nchc/WVdA610VAiZCar6snZ8NNN1UFdZvfTqVr1ey4G7u4qX4dH
      sxoaVT9fdXxVM0ot3PkM5+OoWsG/bDQwtmf4gze+gJbr4Nvv/FSyuvzDMXZdF/En5ob3xHQg
      y/KqG47rurLb0xn2Bz2YWY5EIjg8PMSfaRY++NH9hcnL6A0thW8cPYL39pv44U9/uPhd201M
      n3DK/MEd+pnfePcdBAIBrK+vzwvv33rrra/XarUF2YpVps4y51dl+vE4XUadIN1Z/Z26AFR/
      YVlBjWoSkYP+LJ0mPw3wPA+1Wg21ZgOTyQT3qmUc1U/ENPInE13XxeeK6/hvCrv4nUgakWwW
      7+w/QjQaRSqVgmWa2MzmAU3DZHaxpDzD6Bf5l1wgAFDutLBXPpYNOZVKIRAILNZsuy6ORwMJ
      tgBAKhrD22ubqHW7WNveEh5RqVSSWgbO33g8fqpUAsydFqqJsRCB5ooKtW5YTVKoE5rgcaU+
      DDUGSydWJdr5d4dlCIfD52YuP8Mck8lkgTqi6zr6gwH00QjpdHohGqPWafwnuU0kHx3BMAy8
      PYrjr/IFcTb/7s4rePWjQ/STUfw/MQ2t/lnz6arwP3PXnWv2sA9Bu92Wdr0Ew6sqDf/3d17B
      Ww8reOPOK/h2aF48tbGxIa+lzDo34W63O/9ZvbBpmiiVSgtKwKp0NW+QN86/1RtRi5Z5DfWE
      8F/rsjs4Q3ekOH+G1ej1eqhWqzK5+Dz4h3F7v7CsBoAj6zgOLMOAaRgYDof4p+kN7Fa6MCMR
      ZAZT/NrLG/je/V+d+ezZbCbZ+3A4fKUTmkxNCpUBWAiTEixoymazaDab0DQNB6M+Xivl8Hg2
      wg/+3c/guu5CEhA43YQp6DyZTJazQT3PQ6vVgmEYSKfTeG1rGwUjgD/5+U/lNalUCm9tbKPS
      aeNXB3sy2Grc1l8oox6F6umhmjarIj6WZX1iCtRvEuqzU+1727ZRLBah6/pKVeWZbePP2hX8
      p2t5mDMb70QMjAcekskkWgETRsjEZiiKQLODr/Zs/OSJygfhui729/dFwS+VSkmj7csQFE3T
      RLValTlhWRY2NzfR6XTEBOKm2e12MRwOkc/nUalU8MO9B/ggHkf7CTWDY7FsfIbDoZACl9ob
      kUgE7XZbKLPvPbiPbCazMAFHoxEe16oIRqMS970sZQI45auoJ8mqQfI874yWz2dYDpqmDDqo
      6X/XdXFwcHDu+3/08B4+SiYRDARRuV/D+vo64vE4/ue//DNomoZ/9rd/H7/VG2AvrGFvb0/C
      lzRjVNEEZnMHgwHG4zFCoRDS6TQM47R9K2P8FENoNpvI5XJoNpti+mQyGWxubkrr1clkImYz
      M8We56H3REAh4FuYVL0A5vPsleI6NjY38L1fvLN8AZimiVAoJAkEx3Wxf3h45nWPngjVFgoF
      8dqXlUdycvP/VV4KHaVIJILZbCbHYL/fXyjR/MzZvTxoPnCnZ7NqVSqQp7VfXU/TNDQVs8Nf
      uPS/fu9b+Nbdl/Hghz/FYDSvL6hWq8jlckhEonhtawcfPH4o7ycnh9ViNFm4SFm7m0wmUSqV
      pKZX9fGazSa63S42NzdRqVTEgfeHa9UAiqbNZXXUhWLbNu6sbeCfeFEEq0PcT6ZW06HT6bTc
      SCKRQMAw8VKhiF88erCQ9AIgpwV39X/4xhfxp798B8e1kwWmp+vOmyIEg0GJLzME5s/oMvFS
      r9cxnU5lcXyG8zEej4V2kMvlhGu/v7+/8Lovf/nLqNfrCxx97pyj0Uh2X9ZiE5PpFO9++MHC
      tVx33nEztr6B3eL6wgJY5uepzN9wOCx13Ovr61hfX5f+xCps28b+/j42NjYwHA4xmUxQLBZF
      PcTz5uoVPB1I+vOH6IeTMcbpIIxwBPFAch4G9YuIApDSOXbzSyeSWA/H8LhROxMdchxHJnSr
      1cJGsYSX80W8t/9YVikFjKLRqJwwJD4tK8SgeUT++mQy+ayeF4t2rboRkVtzfHwsUb1yuYx+
      v3+mRJBmRzAYRDgcRiaTga7rC21jOQEpTMDASDoWxz/8/Nv44voWWvYU3eHptVu9Hu5VFiM2
      jP+v0uhxHAeFQgG9Xg/1el2Uo1eh2+0KeW8ymSCTyYj5RWaomnRVxwoAuoMBfjEd4BfuCK1+
      //yCGN7gcDiEaZr4WflgwXn1x5HJBP2TH30fmXQG8XgcnU5H4vZPY8aoEQyGsT7N4MNVSYCu
      62IwGGA4HCKRSCAajaJWq628xng8xvvvvw8A0iyCG5UqJwksLjjDMPBPX30DX4pnoXf7eH3j
      VfxPgz76FwhYGYaBVCp1JqLIMHin08HW1hYsy8KjR48uHAN1QbfbbZRKJaTTaQQCAeRyObRa
      LdF3Vc0ifsdGp41oMIj/8ZU3L14ArBk1TVPsdHr56tGimkSe5+GkNhcrohrD09rwbKZArspn
      5LezzM779+8v5Fx0Xcf6+jqOjo7ObWABAI1G48LPIiKhEF7SA4hkM0AwiNLhEQrpzLkLwLIs
      fO5zn4dtz1Cr1RCPx9Fut6VB309/+lNRdwuFQsjn8zg5ObnMMACYT+pyuQzXdZHNZqW4/+Tk
      BIPBAKFQCNlsViRaiFI6i9ijY5xbDsYKnEKhIEcgozF+8pxaqfXbv/4mkvGEtNd81qQVC50/
      7bu/H7ZtY29vD7PZDMlkUhiXlBdPJpPI5XLPNP6xWEwWVygQhBUKAfcfQzuswEolEfTlZL6y
      cxevrW/Kz/9o93X8l49bCNvzCTqbzSQUe3h4KJOSVVqZTObKlAuGfhnbZ93vq6++iq2tLaRS
      KWSzWRkfXdcxcGb44HfeuvgEAE7FkajZyW4i7ELuPOFokNKwk0jj/YCF3pMCiGXNGa4CdvZQ
      qbKfJcMgZg8AKSIBTjvpnJycYHt7G6VSCcfHx0ur8S5Cu93G9vY2TNPEq9s7sD+8j+Ybn0Mo
      l0Hrr36AN3fW8eH+nry+AxeOZYp5896og/zbr+HH3/w3GChS6370ej2Rzy+VSnj48OHK1y4D
      yygp1ULTud/vo1AoIJvNSoWa67pwNQ1/9qMfXG4BABChIjWe22q18Jsvv4ZkOo0f3fsVXHfe
      aO2Pf/nvxB4DzuqNPg38dcSf9tDodDo9Y68vg+M4eO+995BMJhdi6VdBrVZDqVSCrQHBV+9A
      M3QMjyuA66E2Wez/3J+M8c+KdzF+7S0cNurQsvNQ4/ScwisulkqlIqLIlGG5CgaDgZRl0mRm
      w798Pi9Zcc6laCy6OgrkB2UzRqORCCuFw2GcdDuYGTpi8Tjy+bzcPLN/iUQC4/H4qXV56PCp
      GkVq8uzTikqlIrs/OzEuU1NOJpPodruYTCbCj2Ehuh8a5q2q/Neh1pIDQN/dwktr6zAsE+9H
      DXz36LGoPANAMp7Ab4YSKMYSKNbaKIxthH71EJM7W3hYPTvPLMtCOp2W0sp0Og1Nm5dQdjqd
      BZ3Xi2DbttAwKH0YjUZRqVSk84+qJAdcIIuyDKoTqmkadNPEex98sMDmVBmcjuMsLVm7DJrN
      pvBJWNlDW/fTXAjDZBFhmubKhhN+dW42t1tbW0OlUllwDL/2uV/HH04D+NfZIv7tE559OBxG
      Pp9HvV7HyckJ7lphdO8Y+JN+DX/5/e8Kf4yx+4PyMb7e7+GrEQ9br27g7b85gJFMYGpgQfyW
      16bpViwWEY1GMRgMROeHuajzWAJ+sPkd2aCcl7Zto9/vi8qFVI5d6qrngJwNVvaoMuXkkdN3
      WAXXdUXEKRqNyhGlSnZsb2/Dtm1Mp1M0Gg3EYjHE4/FPpWNsGMbCpnLe6brslGw0GgiFQtja
      2pLkEQDEIlGks1m8EfDwvYcfIZVOi0PNCfi5WBrazz8AdtMSiz86OkIoFMLGxgZGo9E8nt8b
      4Ccnv8APLBOBoIVH9/bP3Md4PBaVOdu2JfegaZqUbK7ihp0HaokC897BKvwEvWtZAMCiMhvj
      9q9t7eCjw320Wq2VoVC21WFGkvqVy8BKI9M00Ww20Wq1kE6nEYvFPlX0aM/zFsJ65+2Oq8zE
      8Xgsu2Gz2YQ9neELroXW39zDjq7jH3/1t/Evf/jdhTCqpmmoaA6ML30e3/3zP8ba2poIH4zH
      YxwcHCAajWJ7exvvlg/Q6XSQTqelJ9lld3KKalGTNBAIQANgmea84OWC9qkE6Q+890wmc0YH
      6Vq2T8MwJLzFn01dx7//8uvYO6lgPJlgK5tHo9/DaHpadON5p4JF1HK5jHZkIBBAMpmUE0DX
      5xLf1KMhveKTGila1cZ0GZbJERK2bePg4AD5fB6pUgJhx4PhASHTwpdCSVR2X8Y3P/pAPicW
      i+E3Rx7w8Eh0QP1gQ5NEIoGXX34Z0+lUWpP+V7/1u3incoT3H9w79545aQOBwFwLdDrDHxS2
      ULRCGEwn+Garih8++JuV3z8cDiOdTkPXdQkUhEIhlEqlM6+9lgVAJ0ZNYduui2qvgy/ffRXf
      ef9dFI0AEI+jO7HwRiKLO7aGH9oDfPf9dyW1fRWuj+oDMP9AE4lMw1gs9on1Fc6jjqtgofgy
      pzcSieD33/wi/tWPvw9d1/Hz9S28Za1Dy6RhfHgPfzuRwA/CYQyeOMW9Xg//fDjPMA+Hw3Pj
      9bTdaRYDwJ//6j10e2cjO/OuNWs4OJibSewgYxgG0vEE/nGsgE0bCA9GcMMRrOW2MHFs/OzR
      fdnZWfNrWRYcx1lonM2Ooctw6SjQRbAsS3ZdDvajWhV7teqcqDTo4T965fPYiMTxa50xcntl
      vHn3ZbSjQYzhCSP0MmDEg7s/C6DZMCGZTArnCICI7fKEuu0Cupo218u8KMsLQEoSly0AQ9eR
      T2fwqHKMXq+Hjj3Dnz76G/yy00BxrYQPNRu/PNxbeE+l1USl1ZROn8uaWBOhUEieDQAMR8Ol
      EZ3/+m99Df/dr/17OHKmOK7X4HmemLWfL67hbS2I5K8eQu/2YTY7CJWKMMIh/Ph4To7r9/to
      tVqiM5RIJCQnEovFsLa2dkYun7hWzXDKZpD05ip+QX80xD//4Xfwv/3gr1BJRBDe3YLueigE
      I+h0OtIc4zIIBALS6wuAKESQIqAqT2jaXFdGNYeexrF6XrjswoxGo1hbW5M2parkoarKwP4K
      hVwev/nWF/DGa6/LWIwnE/zFz38G4DTPMplO8eikgm8Omnj77isrPz8QCJzbMPEqKDcbaE1G
      aDwpvdzZ2ZFYvqVp0OdyFqA3Y3guMrEYNjc3heznr/rK5XLS6+xcBYtr+Qb+iz5pVEeeNoVy
      oWsIRyOoj/qoHjXwXimGnzyc1xnEYjE5LvllbrKN0YuaSLvMPVF3x7ZtbG1todFoyCkHnGbu
      ia+98TZ+p9qHcdCAFrBQ/srX8H83DqWnF2nJ7Ats2zY+vPcR/pcn9AQ/mOvx1+qqII1eLVxf
      hW+8/wt861fvyb17nif5pv1+F/1gBtH1IsyjKrxYFLZp4if1wzMUb0It0LkINx5DJDVXxQ+6
      dWz9B7+Fn/3kB3h7cwe1eAqlVAr71Sp+8fiBHIG6rssDuW68iJP/MvA8D5VKRUwPEskYiGAY
      mqdcOpXG7zbGCFsBBF5/BfpRFTsPT/CFL30R/0e+hF8c7UvlWL1el8XleR6a3c5CWSXBPsAq
      mGGlmVksFtFqtc41kYDT4AffF4/HRVp/PB5jr1LGt7dD+J1sHMnNEuA4eq2cUAAAGZxJREFU
      +Emnhm98+MuF67BjTTKZvFJo/GMJok+mU3zn3ocYjMdIB8OohUY4HvTQd23p7eW6rtj5n2ER
      NHksy8J4PEa5XEapVJKKL8MwsFkoolyvYae0Dv1xDYlXX0bg0QHwykvQPnwAq9XFf7j5Ev76
      /kcIBIOo1uswTRPRaFRObDUowdOZvR8YiVIVp9Xa7lgshlqthmgkgt21dbz/4L5Qk1XzVF1w
      5OmQdsMs8PcffIS9UgnxURAnzSYeV47h4nTxxGIx5PP5p2IbfGyz6/FJFTB0/MX9DyWFTb36
      k5MTsV0/K4JZhKZpQi50HAfT6RTlchmapiESiWA6neLvvfJ5fKU5xvsvF/DjSRcIBtDvdmHe
      2QIePkbGMuFkUxi4Dr74xhvITB38q9a8sqrT6UiBDADppaxK1TMBpi4EFbFYTGgMqWQKX92+
      g71KGfYTHahlFWI8tVjIQ8fZtm1EIhGcNJt4aWMHX4vl8e3NAN5v1RAMBsW/UxkIV8ELsb2a
      polEIjE/dp80d1vV6+s8qIUiL6qNfx2YTqcYj8dwHAfpdFri28Vicd6OKJ2BfvQQES2GR3t7
      ePzWb+CVB2WMylWYhoH+1gb+RWMf7z98AM+cd1556aWXcHx8jOFwuNBknFwa4DR3k06nsb29
      vdDuSsVsNkMqlUKn00Gr08b/9ePvATibsfY8TzrVVyoVZLNZMeXU/FC/30c+n8fLsJA9LOMr
      n9vFMWxspTN4NZ5BKRLDsNXCtzon6IzOL87x44VYAARjugCuFBUiuYtak/1+Xxo+fBJNKNWU
      6Ha7aDabUtPrOA7+xPsIr7+yiXfufwTXdfHNbg0H6wm8GozCCwfxf7aq2D+swTMNUQD5vc+/
      iUokjm+/+w6A00iZ2nCaE5hkSBVqeSZrki9DZCNp0jAMJBIJSVyp1+Mz/O6ojS/8+kt4t9/G
      RiqDv9+ykd57PG/btJbDg0AEv7jNCwA4reYfDAaIxWIX7uSdTkeaK4RCIfT7fSneoU1LvpLx
      ROSJOQv2s7qN4LHfarUkWEABgnqriUeRMOLpFHKl+anwb/d/hR8nEjCMeedItiytVquYTadI
      9kfYdC38Kp1BpTWvG2AIW30G0WhUxK+CwaAoL6j2f7FYRKfTkVOAZYo0Z9h2i5vcbDbDK6+8
      gkajIX6BKqZAJTfHcfDuw/uIRqP4ra2X4JZPMLICCNgOsL2Go+ZZEa2L8EI+fTYy63a7c03K
      J3Ym6w0CgYCYOaRgJJNJ6VLI1qCO45zhlNNp6/f7t1priIs6l8vJOIRCIdRqNTEFT05OZNIV
      CgV43lyNezQayZhFo1EYkSjutIbwag28ur0hUojqZwFAUAlQsO0VTyLKobNL5HQ6RbFYhGVZ
      6HQ60mmGxLderyddXEh/ZiNELjyGxDVNQ6/XEyGFRqOBj4Jh/EYsgn63j2ksim82j/He0cFS
      usN5uLZM8HWCxx6zuc1mE6PRSOLUZJdWq1VxlmazmXSU9ztDdJDobDGs5zgO4vH4rc4K6/q8
      6Rz7ZeVyOYzHYySTSWmVNJvNpHosHo+LuABPDcfzMIiF0cwk8IO9h3CW8IfSyST+h9/7A/zi
      4DHqjYZ0oeFkLZVKcBxHunzSf4hEImi1WtKatdvtCmV5NBpJ5h44zdirYVzVb+AiT6fTGHsu
      aokI7EIWP8QY3/jwl/Omd1c80V/IE0CFpmnCC2dThmQyKeJI3J3oA7CHsD93wAfFB8vsca/X
      W9rq5zaBKtmWZaHRmPfM4mmpKvBRfW0ymSCVSknrIM/z8Bf3PgSwKHTAfwcCAUxmM/zJh++i
      +YRiMBgMsLa2JqdPr9eTUkxO2kajgUAggFKphGq1unKjCQaD4vSqi04VTWammiYuf3cw6mN/
      fx/JVOrKTbiBW7AAuGOrxRSGYSwojHFgqWHEY7Tb7QoRTO1YwwUQi8Uk5Mom0rcRoVAIa2tr
      GI/HUp2VTCZFPS0ZjeF3v/QbqLaa+Ov33oXjOJg9OTlN0xQFaQASgeOiicfjImdYazZkE4lG
      o1LITiQiUQwnY9iK40sqdC6XWyrV4nnztqWpVEo4PKrtr3K4VPB5Hh8fQ9d1qSS7Kq6VC/S8
      4DiOrHaV48PBZgaSLEA1gqHrujRypvmkafMO6GwVxOzldXFdnhdCoRBSqZTY+Zy4f//LX8V/
      9s4j/OfrLyEWi8EwDPz2a5/H5wtrEhAoFosoFosIhUKyUZimiWQyiZOTE5TLZUwmE3z19c+L
      mpt/R/+DN7+IuxvzApR/9MWvoJQ5ZWDyJPeDp3Wj0ZCoHU8t9bmpYHslKts9S4/oF/4EWIZE
      IgHHcbCxsSHZUEYkyGmZTCZy3BMUiPU8T8ylfD6PcrmMTCYj76E50Ww2Rbj1aWuanzfoKI7H
      Y5imiWw2i/ZsisHbn8O+O5Pvc7891wPyhymTySRms5ns/mp9sK7ryIQjsJ9U7qlIp9P41oNf
      wX2yOT0Y92EEg5KbcF0X4XBYJnW32xVBZZIoXddFqVRCrVYTkTU1c5xMJiX6xRJZivM+LW7l
      ApjNZhKL5sMajUaSBHMcR7Kiajo/m80iEAjA8+ZN1Q4ODpDL5aRZh9qFhKl91jXflgUAnLJy
      iV8ePMajSASj8UR2ysmK082yrIVyS8peMlz5p+/MJfI9z5PTg6TFWq0mRU339h4v5QHR8c5k
      MtC009690WgU9+7dQy6Xg6Zp+L0vfgnj6QyPWnUxu0j64+d7nnemR/BVcSsXwGAwQLvdlsFQ
      d3Z/O56NjQ3xFZrNJlKpFBqNxoLq9Gw2E1nudrsti4ucd4bxbjMuki9cBQYLhsMhMpkMptMp
      er0ems2mKEh0Oh05EdQs7jLQUabobrvdFjaqKqX5oFyGps8XFXsAcLGohLtnzePcugWgaRo6
      nY40TGPMW5XFpr2pOmw0beg7qLUD0Sc9DizLQqFQQF0hhqm+AWsOPm0IBoPY3NzEfzE0YG+m
      8L835gzSrUIRJ9UqmoaB9pJOLqvAIplEIoF6vS6ia/l8Hu12G6Zp4rB+Ko9IdXBD12HoBgzL
      lCqwZ8WtWgAUgc3lcuh0OsJaVDORwGkHm/39felWztCpWkyuaRqazSYSiQQGg8Wma9yp+Lnj
      8fiM3ftpAHMng8EAnXgBa5EI/tv454DBCOZghMnQxM937uCPf/GzS19T07Qzep25XE6Sa2ob
      LvW5fvnV1/FSvogf7D+8to3oY10ADHFe9st0u13s5Aq4m8nhh09qfpkoU51dNmVgLqDVasnA
      +hM8nuct7UOlggUgs9lsZWTikwrP89But9FqtfCdXQv/JBxD7qgGp5iD4+moA7g7O7/Djx+h
      UEjseYobWJaF4+NjcXLpz9FU9TwP++0mOp5zrafwx34CXLbxhed56Pf7eDiz0ex35cgtFApI
      JBILiZjJZLKgQ0RHmfmBSCQiBfTLPkcFlcuazabQMMhD/yQrTxC9Xk/GJB9LIBiJQO8N4Nzd
      hjWZIvGlt/HX5b0z45ZPpfHG+ib+4oNfnrlmKBRCJBKRHmL0w9TOopzkajjWCgYxukQd9FXw
      sS4A8kcuA8ojDtwhpvac/8OJPxqNsL6+vpD4Uh+ISoMA5lVUgUBgoZcUX091ZUaGXNcVfg0A
      6TA4Go2EqxSNRj+x9OtwOCzcoep0DN0wYN/ZguZ6cLbXYbs2NsYOIsEQ4uEwXs2X8M7hY0xm
      UzSWMDPVyBp3eU3TUK1WJUSrSrYz0+zX87kuvJBcoGWg2TGdTpFMJpFIJGQiAqeTmvKJrChb
      BcdxpJiCzRTIEGVTOX8zafoajDYxiUOeC5ms5NrctgXx1tYO/nDrZXjhEMpPCHH8noZhYHdj
      E3cfHCNy0gB6A/QTUfS/9xNEugN0ttfwdyMZvPGwjNjuNn5eOUK1fbYe2DAMkbvv9XpS1D4a
      jTAYDDCdTpHP52Uc0+n0jdJUPnYT6LJwXRepVEoIcf7GDiRikeZ73uQnBoPBAvtQbfzhD+Wp
      0SbVj1A5R5TiIH8ml8vdGn/Bsiz8nWgO6bGNeCiF95TTMR6P44s7d3DcaWMYDiDZ6ADpJGb7
      R/AcB14ogs5wgJOoiY2tDbS907Hz+3m2bcs4M2GpjqFt2zg5OUE+n0etVrtyr4Cr4tYsgE6n
      g3A4LBLffjCy4Lrugt7lRaBj7L/WKlxGqZgnQb1eRzKZFLLai4zZbIZ72gxfzOdwv9M44x/F
      rACMYAA/SEexkY2hZgD5zgjpu1t4xxnh3uN7SLwcxZt9Gxv5U/9rmWkYCoVQrVYllK0KK3ND
      arfb2NjYuPEN5NYsgGAwiHK5jEbjlJClIh6Po9vtrmzG9qy4KmWai6BWq8FxHOHZvMj41x++
      i2/H4+gvaVL3nfu/wtfuvIqh6+I79TIqraaYR+12G67r4n75CEebL+P93rygZtnmAkDMVrUw
      3g/S1W86yHA7zmfMnbFUKiV2tzohWRF1k5P/aWoGVPWDy5hkLwKWTX7incoRdM+D7swbIrbb
      baFB6LoOWwP+xeE9/Lw813riuPlzNJStvGhML3uKPwtuzQJgdpdcH3XwwuHwjQ/WsxbN3IS2
      0fNEJBTCH5oJfOF+GZayqzOWzy6NLIkEsDJnQhoEq/pW4XmwcW/NAiDy+TwASCEHAOkGeFP2
      4kWT/zz7nuHXpynWeJGgaRp015v/wen37fV60tu32WzKz6vGxLIsFItF6Q98XnadSbCbxK1b
      AIZhIBwOn5FRHAwGyOfziEajZ4hr4XBYIjKckMsGVtWnUbUmV5lAKqViFRzHkYbgtxmD0Qh/
      rA3x/xbDOBn0sFUoQn/yvVl5RjBsugyRSASNRgP1eh3VahWmaWJnZwdra2uiaapW+d30Arg1
      TrCKVCqF4XC40Di73+9jNBpJpjYcDovEIjlDVBugc7Zs4jK8yQeo6zpef/11tNttcd5isRgC
      gQDu3Zvr3K96SJQqKRQKn4iMcaPXxeuFNfz3gQz0qY0f3X0d37j/4ZnX9fv9BYU5f+RM3VD6
      /b6YQ6FQaIGDtSzYcd24lQuA5YuTyQSZTEaaYpBlyGTZZDJBo9GQhUBFYzWOv2yA/QuDHUtY
      lOF/qKsWgK7rn5jJD8z9gLdDcQRO5i2T3sok8C2f9g+fATu8sECJLE/LshbKUgmVbs3rua6L
      drt9o+odt3IBUECrUqlITevu7i4ajQZM00Sv18PJyQnS6bQMdq/XQ6FQEFUJ7uZ+ygRPCj6c
      2WyGX/7yl3JqHB0dnRGL9YOmFMsxPyl4rbCGYCYNNxwCbBt7hrc0L+I4DlqtllBVKHloWRbC
      4TA2NjZQr9fFdOLvWq2W+A8MalwmdDyZTESy8aq4lQsAgJTC7e/vw/M8HB8fLyiJWZYlUQRm
      ccvlshRQx+Nxcd78USUAZ/wAle14Gds/l8vdeBbzeeOd/Uf4y3ffwZ18ESEziA8enjV/AIiW
      k6ZpGAwGUk0G/P/tXVtT2lwUXYRrSJQQBdGOL532//+WzvdmZ/piZxxnFJCEWzDke6BrcwgJ
      itpKDme90HGwYM7Z57L32mut7gtsYOddgbItjuPIwqQKGLwE7hpv2SkKGwAAZJKn9fC5qmQ9
      PDbUUEw27XLCjrL3mGjkKRkUHbQa/e/P80p3Y3GhsCwL/X5/o3sLgDi3U7mi0WjAdV2RwOcO
      MVUc5UmVyOv8Go/Hco94Cwo9SmQPZmV1KNzEHSG9WvOYkmajfhRlochiW3mg5CTBuxCZuvw3
      /3Y1o6Zm2FgrYJ8vj5W0vwXW47BrMVksFhiNRluZu31Q6AAolVZS4UyhRVEk5Ctg7VEFbDI5
      +bPZbAbbtnF2dlb4PP2/ACUnVaRTxJzonLSkNKiGda1WC1EUodlsilYo2bg8+3MMVbNr9XsM
      BgOx1wXw5m69Qh+BiGazCdu2MZlMRA+TAq4q4Yo8dGCdYqOSgeM4mdVktW6QbrhXke40+4h+
      1UOD53mwLEso48B6oooNFlbFsU6ng8FgsEFdcV0X9XpdRAkAiKfc4+OjEB2pOJGl97NYLERE
      l+D4vmX31iIAgLW7+NXVFfr9PlqtlrRCAmtablZLZBRF0l7J7jFC3dLzeP7pdkBd7wAUI0hX
      3alEx0WFZ3n2ZbDpPY7jLRr7ZDIRvv/v37+F19VqtTIndBa7tFQqvZloqE0AEPV6HZ1OBzc3
      N2i32yIfDqzptqrYErVE8zIO5KtwdWOaND0BVLDNTzd4nifeYOm/jwUsz/MQBAEmk4kUtli4
      zCIr8nJLZinbH/OeX9bP37r6AwW/A+wC+UHpFKcqm+J5Hmq12sZleld1mNh12dpFAyg66vW6
      yCLmIUkSCQa+snU0656lqnXzOLRrMmc5h77nuKllAPBIoq78KriqDwYDhGEonVx5x5Z9UqK1
      Wk1bd/pSqYRer5dJb9iFKIpwf38vWk0qHMeRxvss55k00lT41x5/cqv1r/j+hQNXeapFU66P
      51PyVIB1FkM9+6uZjbyBziPHvVWluCignxtz+SryqrGc9MPhEJ1ORxYI3tvCMESSJC9S2pMk
      2bpDqGJnWUhf1re+285PLChY+R0Oh3BdF91uF7Zto9frodVqyQPj+yi54vs+Li8vUSqV8Pz8
      LJ67xK4iWalU2sugucg4Pz8HsM3Xp7Bu+vnwjE7qg+d56HQ6uL6+xsPDg7xPJcJlgQuVCvYg
      5OGl8dBytFiwYYmd7ihctZIkkbMmi2V0L6FmzdPTUyY9QjV+o83Q3+xFOERwQmftjulimfo7
      3W5X+D7A6sK8z27Joqb6ue9tM9Vy1LjtMe9MnzB1RSdxLt2ry+IYu5qATU+BcrmMer0Oz/Nw
      eXmJZrN5VJOf2EfRD4AY5qnHHNKmgW2+Vd5npp/1e+9bWo4cV4izszPc3t6KfiiweaENgkAK
      YXQaT5JEjNs48bniMQDOz88L3+DyXtDsIt2bTUW+SqUiz8jzPNmN1ZQzx6lUKsF13VftCKen
      pzI2rD28B1oegVS/KTUblKVSkCQrbdBGoyEPn26HQRCIvRLvCicnJ0dxzn8JJCJSjAyApDKH
      wyF83xfF59lsJlVhvpetkTTFeO1Eph0U8DG8LS1Hkg+ZpnppRqJKb6A8I1ekSqWCbreL0Wi0
      kc9XleAM1kYXaW2fcrmMi4sLDAYDsazi4sFXFiAXf5xm9iWyaSWO+9GI4xjj8Vh8g2mQDWzK
      dHDgeO6Mogi+70vKdDabYTQabQyszunNfVGr1aQopTro3N3dZS4S6uSn7KTqZfZZ0C4A6Hjo
      +z7u7+9RrVa3egUI7gTMEAHA9fU1bm9vRTKddwAOsq5Frn1hWRaur6/F0DwMQ3HTUcHdgQvI
      +fm5CJgFQfDpTUPaBQAAodXy8soze9Y2u2EG/Yc7NJlMhPTGV6ZOzfl/Ddu28fT0hOl0KnKH
      3W5XWLiLxUKM7R4eHoT1SWPCZrP5qas/oGkAMGWZJqzx2OO6rlQfCcdx0Ol0Msle/L/e2nWk
      M2zbxmg02qBIf/36VdSdLctCFEVy5m+32wjDEOVyWTI6nwntAoCrzt3d3RYpTaU8qA3wLMn/
      /PkT3W4XruuKT1gcxytzhgwSlsFqsaGJHp02Hx8fReqEAmaqHA37gg9hN9WuDqDK7ZGXo55D
      y+WyFLvUHYK/d39/j+l0il6vJ0SrRqNxEIN1qCB9mbtrt9vFly9f4LouqtWqPD9eeukIeQjQ
      blSZ0bm6ukKv1xP+CW2RFosF4jiWnWIymaDf729kLsIwxGw2g+/7Ww0yBtlghs1xHNFqZYGR
      7apBEMBxHPECPgRoFwDAqsvItm3c3NzAsix8+/YNd3d3mM/n4vMVxzEeHh428tlqtxFrBIey
      Uh06oihCpVLBr1+/AGx3yVmWdZAVdO0CgH7A0+kUs9kMSZLgx48fWC6XuXRb2vbwosbt/DX8
      dIPV5CbXh/UB+qZR/uRQ6yhaBUAcx5jP5+j1esIb50NXVSGyfm+xWODq6kqyF0VwdTkktNtt
      OI5TODEArQKAAlekLaQnsKoKkcZgMMDJycnBu7gcMoo2+QGNskBsaiHzMEs54CXCVb/f/5tf
      0eAAoU0A8LxP8dsskNaQB12b2Q3yoU0AMI2Zp+xApE0YAEhDNlv9DI4H2twBVH2ZvJWcxyCq
      lC2XS9i2Ddu2TcbnSKFNAFCVrFarbTRaZ71vuVzC9/1CXtoMPhbaHIEokf0aZ8Fdu4TBcUGb
      HWCxWKBareZKa5DOPJlM/on3lEExoE0AnJycbDS/Z6FarW45SBocN7RYBuku4vt+Lt2BvlP/
      wn3coDjQIgDIM2ejRR6en5+NEYbBBrQIgHq9Lu6QeWxDy7JEh97AgNAiAFR3kjyxpENlIxp8
      LrS4BLPdDlgFQ9oBpt1uG5KbQSa0CIAwDEVuL33JpfmFgUEWCn8E4upPh8i0KNNb7TMNjgOF
      D4ByuSxmbKenp1s7wGw2w3A4zPSnMjAofAA8Pz+L/DntdtIYj8d7WfoYHA8KHwDj8RhRFMlR
      KG3aDMB0ehnkovABQFXnTqeDIAi2PH4dx9lpu2lw3Ch8AFCusFKpYDQabZnbGTlDg10ofABU
      KhWRQE8fcy4uLj5dfdjgsFH4AGg0GlgulwiCABcXF6JFY1mW6fIyeBGFDwAA6PV6CMNQ1J+p
      8/Oa/P9wOEQYhpJJMjguaFEJVpWJfd9HHMewbVv0gfLA3uDxeGwkEI8UWgSA53mYz+dSDS6X
      y5hOp6jX6y/ablYqFbRarX/4bQ0OCVocgZIkQbPZlFoA9eqjKDI0CIOdqHz//v2zv8OHYD6f
      Sz9ArVbDcDgUPy/j62WQh/8BW6iQtcbrwUsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Incident Regions and Number of Dead, Missing and Vunerable Persons' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Survivors per Country of Incident' width='192'>
      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
      7TexCiQMtP8PXM0edN7BgUYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Survivors per Route' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
